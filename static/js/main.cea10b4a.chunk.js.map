{"version":3,"sources":["components/ProgressComponent.js","views/AppViews.js","components/navbar.js","views/IBOViews.js","views/SupplierViews.js","views/CertViews.js","views/CustomerViews.js","build/index2.main.mjs","index.js"],"names":["useStylesFacebook","makeStyles","theme","root","position","bottom","color","palette","grey","type","top","animationDuration","left","circle","strokeLinecap","FacebookCircularProgress","props","classes","className","CircularProgress","variant","disableShrink","size","thickness","useStyles","flexGrow","ProgressBars","style","display","justifyContent","alignItems","height","paddingRight","Wrapper","app","this","id","React","Component","ConnectAccount","ToastMessage","message","SelectRole","parent","src","process","alt","Heading","Text","Button","onClick","selectIBO","selectSupplier","selectCustomer","selectCert","menuButton","marginRight","spacing","title","logo","margin","textAlign","maxWidth","maxHeight","transform","NavbarComponent","AppBar","background","Toolbar","IconButton","edge","sleep","milliseconds","Promise","resolve","setTimeout","Deploy","deploy","ShowTerms","defaultInfo","resolveShowTerms","ctcInfoStr","onChange","e","setState","info","currentTarget","value","placeholder","state","WaitingForProduct","Finished","role","class","WaitingForCertified","SendCADToSupplier","resolveSendCADFile","sentCADs","RunBackend","MetaMaskButton","runBackend","AckProductReceived","terms","from","resolveAckProductReceived","substring","acknowledgedProduct","ShippedToCert","resolveShippedToCerts","shippedProduct","ShippedToCustomer","resolveShippedToCustomer","shippedProductFinal","BackendRunning","button","a","navigator","clipboard","writeText","origInnerHTML","innerHTML","disabled","undefined","BackendRan","IBOWrapper","ibo","spellCheck","ShipProduct","resolveShipProduct","ApproveRequest","DisplayInfo","SupplierWrapper","supplier","CertifyProduct","resolveCertifyProduct","ShipProductToIBO","resolveShipToIBO","to","purpose","finished","CertWrapper","cert","AcceptTerms","resolveAcceptTerms","acceptedTerms","status","step","interval","setInterval","updateStep","ctc","getViews","Main","toString","percent","toNumber","strokeWidth","strokeColor","ReceivedProduct","resolveProductReceived","requestStandard","CustomerWrapper","customer","_version","getExports","s","reachStdlib","_getViews","viewlib","stdlib","ctc0","T_Bytes","checkedBigNumberify","UInt_max","ctc1","T_UInt","infos","decode","i","svs","args","eq","assert","ty","views","_getMaps","mapDataTy","T_Tuple","Cert","interact","sendrecv","reject","Error","ctc2","T_Bool","ctc3","ctc4","T_Address","ctc5","ctc6","ctc7","ctc8","creationTime","recv","txn1","data","v25","v26","time","v24","txn2","v33","txn3","v37","v40","addressEq","at","fs","msg","who","txn4","v46","v49","txn5","v55","txn6","v63","v66","txn7","v72","v75","txn8","v85","v81","v84","ackProductReceived","v89","protect","txn9","sim_r","txns","mapRefs","mapsPrev","mapsNext","prevSt","digest","prevSt_noPrevTime","v93","v90","push","amt","kind","tok","nextSt","nextSt_noTime","view","isHalt","certified","v97","txn10","v102","v98","v101","v106","txn11","v111","v107","v110","txn12","v116","v119","txn13","v125","v128","txn14","v134","v137","Customer","ctc9","v28","acceptTerms","v32","v36","v41","v129","v133","IBO","v19","v18","request","showTerms","v23","sentCADtoSupplier","v45","v50","v67","v71","v76","v80","v115","v120","v124","Supplier","ackCADreceived","v54","v58","v62","_Connectors","ALGO","appApproval","appApproval0","appClear","mapArgSize","mapDataKeys","mapDataSize","mapRecordSize","stepargs","count","steps","unsupported","version","viewKeys","viewSize","ETH","ABI","Bytecode","BytecodeLen","Which","deployMode","reach","standardUnit","App","mode","acc","getAddress","addr","balAtomic","bal","fundAmountStandard","faucet","amountAtomic","selectRole","backend","JSON","getInfo","stringify","want","got","term","cad","console","log","length","replace","ctcInfo","parse","attach","notCertified","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cea10b4a.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\n\n// Inspired by the former Facebook spinners.\nconst useStylesFacebook = makeStyles((theme) => ({\n  root: {\n    position: 'relative',\n  },\n  bottom: {\n    color: theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  top: {\n    color: '#1a90ff',\n    animationDuration: '550ms',\n    position: 'absolute',\n    left: 0,\n  },\n  circle: {\n    strokeLinecap: 'round',\n  },\n}));\n\nfunction FacebookCircularProgress(props) {\n  const classes = useStylesFacebook();\n\n  return (\n    <div className={classes.root}>\n\n      <CircularProgress\n        variant=\"indeterminate\"\n        disableShrink\n        className={classes.top}\n        classes={{\n          circle: classes.circle,\n        }}\n        size={80}\n        thickness={4}\n        {...props}\n      />\n    </div>\n  );\n}\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n  },\n});\n\nexport default function ProgressBars() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root} style={{ display: \"flex\", justifyContent: 'center', alignItems: 'center', height: '200px', paddingRight: \"60px\" }}>\n      <FacebookCircularProgress />\n      <br />\n\n    </div>\n  );\n}","import React from 'react';\nimport { Button, Text,Heading } from \"rimble-ui\";\nimport { ToastMessage } from 'rimble-ui';\nimport ProgressBars from '../components/ProgressComponent'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nexport class Wrapper extends React.Component {\n    render() {\n        const { app } = this.props;\n        return (\n            <div className=\"App\">\n                <header className=\"App-header\" id=\"root\">\n                    {app}\n                </header>\n            </div>\n        );\n    }\n}\n\nexport class ConnectAccount extends React.Component {\n    render() {\n        return (\n            <div>\n                <ProgressBars />\n                <ToastMessage message={\"Please wait while we connect to your account.\\n\" +\n                    \"                    Please use AlgoSigner to access ReachKey.\"} />\n\n            </div>\n        )\n    }\n}\n\n\nexport class SelectRole extends React.Component {\n    render() {\n        const { parent } = this.props;\n\n        return (\n            <div><div>\n            <img src={`${process.env.PUBLIC_URL}/assets/images/ReachKey.png`} alt=\"logo\" />\n          </div>\n          <br/>\n                <Heading>\n                    Please select a role\n                </Heading>    <br/>   \n                <Text>\n                    <Button\n                        onClick={() => parent.selectIBO()}\n                    >IBO</Button>\n                    <br /> Initializes Contract and interacts will all parties.\n                </Text>    <br/>  \n                <Text>\n                    <Button\n                        onClick={() => parent.selectSupplier()}\n                    >Supplier</Button>\n                    <br /> Produces Product and sends it to IBO.\n                </Text>    <br/>  \n                <Text>\n                    <Button\n                        onClick={() => parent.selectCustomer()}\n                    >Customer</Button>\n                    <br /> Does initial payment and receives product.\n                </Text>    <br/>\n                <Text>\n                    <Button\n                        onClick={() => parent.selectCert()}\n                    >Certification Authority</Button>\n                    <br /> Certifies product and sends it to IBO.\n                </Text>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\n \n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  logo: {\n    margin: 'auto',\n    textAlign: 'center',\n    maxWidth: '50%',\n    maxHeight: '70%',\n    position: 'absolute',\n    left: '50%',\n    top: '50%',\n    transform: 'translate(-50%, -50%)'\n  },\n}));\n\nexport default function NavbarComponent() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar title={'ReachKey'} style={{ background: '#2E3B55' }}>\n        <Toolbar>\n\n          <IconButton edge=\"start\" className={classes.menuButton} color='inherit' aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n          {<div>\n            <img src={`${process.env.PUBLIC_URL}/assets/images/ReachKey.png`} className={classes.logo} alt=\"logo\" />\n          </div>}\n\n          <Button color=\"inherit\">Exit</Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}","import React from 'react';\nimport { Button, Heading, Text } from \"rimble-ui\";\nimport { MetaMaskButton } from 'rimble-ui';\nimport NavbarComponent from '../components/navbar'\nimport ProgressBars from '../components/ProgressComponent';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\n\nimport CheckIcon from '@material-ui/icons/Check';\n\n\n\nconst sleep = (milliseconds) => new Promise(resolve => setTimeout(resolve, milliseconds));\n\nexport class Deploy extends React.Component {\n    render() {\n        const { parent } = this.props;\n        return (\n            <div><Heading>IBO</Heading>\n                <Text>\n                    As IBO, it is your job to deploy the initial contract.\n                </Text>\n                <Button size=\"medium\"\n                    onClick={() => parent.deploy()}\n                ><Text>Deploy</Text></Button>\n            </div>\n        );\n    }\n}\n\n\nexport class ShowTerms extends React.Component {\n    render() {\n        const { defaultInfo, resolveShowTerms, ctcInfoStr } = this.props;\n\n        return (\n\n            <div>     <Heading>IBO - Contract Info and Negotiate Terms (Step 1/14)</Heading> <div>\n                <Text>\n                    What are the terms of the products?\n                </Text>\n                <br />\n                <textarea\n                    onChange={(e) => this.setState({ info: e.currentTarget.value })}\n                    placeholder={defaultInfo}\n                />\n                <br />\n                <Button size=\"medium\" onClick={() => resolveShowTerms(this.state.info)}>Send Terms</Button><br />\n            </div>\n                <div>\n                    <Text>The contract is running!\n                    </Text>\n                    <h2>Please share the contract information with the other parties.</h2>\n\n                    <pre className='ContractInfo'>\n                        {ctcInfoStr}\n                    </pre>\n                    <br />\n\n                    <br />\n\n\n\n                </div>\n            </div>\n        );\n    }\n}\n\nexport class WaitingForProduct extends React.Component {\n    render() {\n\n\n        return (\n            <div>\n                <Text><Heading>IBO</Heading>\n                    Waiting for product to be produced and shipped by the Supplier. This will refresh when product is shipped.\n                </Text>\n\n\n            </div>\n        );\n    }\n}\n\nexport class Finished extends React.Component {\n    render() {\n\n\n        return (\n            <div><Heading>IBO</Heading>\n                <div className=\"alert alert-success\" role=\"alert\">\n                <h4 class=\"alert-heading\">Done!</h4>\n                <CheckIcon />\n                <Text>\n                    You have shipped the product to the customer.\n                </Text>\n            </div>\n\n\n            </div>\n        );\n    }\n}\n\nexport class WaitingForCertified extends React.Component {\n    render() {\n\n\n        return (\n            <div>\n                <Text><Heading>IBO</Heading>\n                    Waiting for certification by the Cert Authority. This will refresh when product is certified and shipped back.\n                </Text>\n\n\n            </div>\n        );\n    }\n}\n\nexport class SendCADToSupplier extends React.Component {\n    render() {\n        const { parent, resolveSendCADFile } = this.props;\n\n        return (\n\n\n            <div>\n                <Heading>IBO - Send CAD Files (Step 3/14)</Heading>\n                <Text>\n                    Do you want to Send the CAD data to the Supplier?\n                </Text>\n                <br />\n\n                <br />\n                <Button size=\"medium\" onClick={() => {\n                    resolveSendCADFile(true)\n                    parent.sentCADs()\n                }}>Send CAD File to Supplier</Button><br />\n            </div>\n\n        );\n    }\n}\n\nexport class EnterRequest extends React.Component {\n    render() {\n        const { parent, defaultRequestStandard } = this.props;\n        const { req } = this.state || {};\n        return (\n            <div>\n                <Text>\n                    How much algo should customer pay you for the product?\n                </Text>\n                <input\n                    type='number'\n                    onChange={(e) => this.setState({ req: e.currentTarget.value })}\n                    placeholder={defaultRequestStandard}\n                />\n                <br /> <br />\n                <Button size=\"medium\" mr={3} onClick={() => parent.enterRequest(req || defaultRequestStandard)}>Submit request</Button><br />\n            </div>\n        );\n    }\n}\n\nexport class RunBackend extends React.Component {\n    render() {\n        const { parent, info } = this.props;\n        return (\n            <div>\n                <Text>\n                    You request 5 algo\n                    to produce the following product: <strong>{info}</strong>\n                </Text>\n\n                <Text>\n                    Ready to connect to the contract?\n                </Text>\n\n                <MetaMaskButton onClick={() => parent.runBackend()}>Connect Contract</MetaMaskButton><br />\n\n            </div>\n        );\n    }\n}\n\nexport class AckProductReceived extends React.Component {\n    render() {\n        const { parent, terms, from, resolveAckProductReceived } = this.props;\n\n        return (\n            <div><Heading>IBO - Acknowledge received product from {from} ({from.substring(0, 3) === \"Sup\" ? \"6\" : \"11\"}/14)</Heading>\n                <Text>\n                    Do you want to acknowledge that you received the product {terms} from {from}?\n                </Text>\n\n                <br />\n                <Button\n\n                    onClick={() => {\n                        resolveAckProductReceived(true)\n                        parent.acknowledgedProduct()\n                    }}\n                ><Text>Acknowledge</Text></Button>\n            </div>\n        );\n    }\n}\n\n\n\nexport class ShippedToCert extends React.Component {\n    render() {\n        const { parent, resolveShippedToCerts } = this.props;\n\n        return (\n            <div><Heading>IBO - Ship product to cert authority (Step 7/14)</Heading>\n                <Text>\n                    Do you want to ship the product?\n                </Text>\n\n                <br />\n                <Button\n\n                    onClick={() => {\n                        resolveShippedToCerts(true)\n                        parent.shippedProduct()\n                    }}\n                ><Text>Ship Product</Text></Button>\n            </div>\n        );\n    }\n}\n\nexport class ShippedToCustomer extends React.Component {\n    render() {\n        const { parent, resolveShippedToCustomer } = this.props;\n\n        return (\n            <div><Heading>IBO - Ship product to customer (Step 12/14)</Heading>\n                <Text>\n                    Do you want to ship the product?\n                </Text>\n\n                <br />\n                <Button\n\n                    onClick={() => {\n                        resolveShippedToCustomer(true)\n                        parent.shippedProductFinal()\n                    }}\n                ><Text>Ship Product</Text></Button>\n            </div>\n        );\n    }\n}\n\nexport class BackendRunning extends React.Component {\n    async copyToClipborad(button) {\n        const { ctcInfoStr } = this.props;\n        navigator.clipboard.writeText(ctcInfoStr);\n        const origInnerHTML = button.innerHTML;\n        button.innerHTML = 'Copied!';\n        button.disabled = true;\n        await sleep(1000);\n        button.innerHTML = origInnerHTML;\n        button.disabled = false;\n    }\n\n    render() {\n        const { ctcInfoStr } = this.props;\n        if (ctcInfoStr === undefined) {\n            return (\n                <div>\n                    <ProgressBars />\n                    <Text>\n                        Waiting for the contract to deploy...\n                        If this takes more than 1 min, something may be wrong.\n                    </Text>\n                </div>\n            )\n        } else {\n            return (\n                <div>\n                    <Heading>Contract Info</Heading>\n                    <Text>The contract is running!\n                        Please share the following contract info.\n                    </Text>\n                    <pre className='ContractInfo'>\n                        {ctcInfoStr}\n                    </pre>\n                    <br />\n\n                    <br />\n\n                    <Text> will be automatically prompted to approve the next transaction\n                        once the Customer has paid the requested amount into the contract.</Text>\n                </div>\n            );\n        }\n    }\n}\n\nexport class BackendRan extends React.Component {\n    render() {\n        return (\n            <div>\n                <ProgressBars />\n                <Text>\n                    Waiting...\n                </Text>\n            </div>\n        );\n    }\n}\n\nexport class IBOWrapper extends React.Component {\n    render() {\n        const { ibo } = this.props;\n        return (\n            <div className=\"IBO\">\n                <NavbarComponent />\n                {ibo}\n            </div>\n        );\n    }\n}","import React from 'react';\nimport { Button, Heading, Text } from \"rimble-ui\";\nimport NavbarComponent from '../components/navbar'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport CheckIcon from '@material-ui/icons/Check';\nimport ProgressBars from '../components/ProgressComponent';\n\nexport class RunBackend extends React.Component {\n    render() {\n        const { parent } = this.props;\n        const { ctcInfoStr } = this.state || {};\n        return (\n            <div><Heading>Supplier</Heading>\n                <Text>\n                    IBO will deploy the contract.\n                </Text>\n                <Text>\n                    Get contract info from IBO and paste it here:\n                </Text>\n                <textarea\n                    className='ContractInfo'\n                    spellCheck='false'\n                    onChange={(e) => this.setState({ ctcInfoStr: e.currentTarget.value })}\n                    placeholder='{}'\n                />\n                <br />\n                <Button\n                    disabled={!ctcInfoStr}\n                    onClick={() => parent.runBackend(ctcInfoStr)}\n                ><Text>Connect</Text></Button>\n            </div>\n        );\n    }\n}\n\n\nexport class AckProductReceived extends React.Component {\n    render() {\n        const { parent, terms, resolveAckProductReceived } = this.props;\n\n        return (\n            <div><Heading>Supplier - Acknowledge receiving CAD files (Step 4/14)</Heading>\n                <Text>\n                    Do you want to acknowledge that you received the CAD files {terms}?\n                </Text>\n\n                <br />\n                <Button\n\n                    onClick={() => {\n                        resolveAckProductReceived(true)\n                        parent.acknowledgedProduct()\n                    }}\n                ><Text>Acknowledge</Text></Button>\n            </div>\n        );\n    }\n}\n\nexport class ShipProduct extends React.Component {\n    render() {\n        const { parent, resolveShipProduct } = this.props;\n\n        return (\n            <div><Heading>Supplier - Shipping Product (Step 5/14)</Heading>\n                <Text>\n                    Do you want to ship the product?\n                </Text>\n\n                <br />\n                <Button\n\n                    onClick={() => {\n                        resolveShipProduct(true)\n                        parent.shippedProduct()\n                    }}\n                ><Text>Ship Product</Text></Button>\n            </div>\n        );\n    }\n}\n\nexport class ApproveRequest extends React.Component {\n    render() {\n        return (\n            <div><Heading>Supplier</Heading>\n                <ProgressBars />\n                <Text>\n                    Once you receive the CAD files, this page will update.\n                </Text></div>\n        );\n\n    }\n}\n\nexport class DisplayInfo extends React.Component {\n    render() {\n\n        return (\n            <div><Heading>Supplier</Heading>\n            <div className=\"alert alert-success\" role=\"alert\">\n                <h4 class=\"alert-heading\">Done!</h4>\n                <CheckIcon />\n                <Text>\n                    You are finished with this product lifecycle.\n                </Text>\n            </div></div>\n        );\n\n    }\n}\n\nexport class SupplierWrapper extends React.Component {\n    render() {\n        const { supplier } = this.props;\n        return (\n            <div className='Supplier'>\n                <NavbarComponent />\n                {supplier}\n            </div>\n        );\n    }\n}","import React from 'react';\nimport { Button, Heading, Text } from \"rimble-ui\";\nimport NavbarComponent from '../components/navbar'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport ProgressComponent from '../components/ProgressComponent'\nimport CheckIcon from '@material-ui/icons/Check';\nimport ProgressBars from '../components/ProgressComponent';\n\n\nexport class RunBackend extends React.Component {\n    render() {\n        const { parent } = this.props;\n        const { ctcInfoStr } = this.state || {};\n        return (\n            <div>\n                <Text><Heading>Certification Authority</Heading>\n                    IBO will deploy the contract.\n                </Text>\n                <Text>\n                    Get contract info from IBO and paste it here:\n                </Text>\n                <textarea\n                    className='ContractInfo'\n                    spellCheck='false'\n                    onChange={(e) => this.setState({ ctcInfoStr: e.currentTarget.value })}\n                    placeholder='{}'\n                />\n                <br />\n                <Button\n                    disabled={!ctcInfoStr}\n                    onClick={() => parent.runBackend(ctcInfoStr)}\n                ><Text>Connect</Text></Button>\n            </div>\n        );\n    }\n}\n\nexport class ApproveRequest extends React.Component {\n    render() {\n        return (<div><Heading>Certification Authority</Heading>\n            <Text>\n                Once you get the product from IBO, you will be prompted to certify it.\n            </Text></div>\n        );\n    }\n}\n\n\nexport class CertifyProduct extends React.Component {\n    render() {\n        const { resolveCertifyProduct,parent } = this.props;\n\n        return (\n            <div><Heading>Cert Authority - Certify product (9/14)</Heading>\n                <Text>\n                    Do you want to certify the product?\n                </Text>\n\n                <br />\n                <Button\n\n                    onClick={() => {\n                        resolveCertifyProduct(true)\n                        parent.acknowledgedProduct()\n                        //parent.certifiedProduct()\n                    }}\n                ><Text>Of course!</Text></Button>\n            </div>\n        );\n    }\n}\n\nexport class ShipProductToIBO extends React.Component {\n    render() {\n        const { parent, resolveShipToIBO, to, purpose } = this.props;\n\n        return (\n            <div><Heading>Cert Authority - Ship product to IBO (10/14)</Heading>\n                <Text>\n                    Do you want to ship the product to {to} for the purpose of {purpose}?\n                </Text>\n\n                <br />\n                <Button\n\n                    onClick={() => {\n                        resolveShipToIBO(true)\n                        parent.finished()\n                    }}\n                ><Text>Ship</Text></Button>\n            </div>\n        );\n    }\n}\n\nexport class DisplayInfo extends React.Component {\n    render() {\n\n        return (\n            <div><Heading>Cert Authority</Heading>\n                <div className=\"alert alert-success\" role=\"alert\">\n                <h4 class=\"alert-heading\">Done!</h4>\n                <CheckIcon />\n                <Text>\n                    You are finished with this product lifecycle.\n                </Text>\n            </div>\n\n            </div>\n        );\n\n    }\n}\n\nexport class BackendRan extends React.Component {\n    render() {\n        return (\n            <div><Heading>Cert Authority</Heading>\n                <ProgressBars />\n                <Text>\n                    Waiting...\n                </Text>\n            </div>\n        );\n    }\n}\n\n\nexport class AckProductReceived extends React.Component {\n    render() {\n        const { parent, resolveAckProductReceived } = this.props;\n\n        return (\n            <div><Heading>Cert Authority - Acknowledge received product (8/14)</Heading>\n                <Text>\n                    Do you want to acknowledge that you received the product?\n                </Text>\n\n                <br />\n                <Button\n\n                    onClick={() => {\n                        resolveAckProductReceived(true)\n                        parent.acknowledgedProduct()\n                    }}\n                ><Text>Acknowledge</Text></Button>\n            </div>\n        );\n    }\n}\n\n\nexport class CertWrapper extends React.Component {\n    render() {\n        const { cert } = this.props;\n        return (\n            <div className='Cert'>\n                <NavbarComponent />\n                {cert}\n            </div>\n        );\n    }\n}","import React from 'react';\nimport { Button, Heading, Text } from \"rimble-ui\";\nimport { Line } from 'rc-progress';\nimport NavbarComponent from '../components/navbar'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport ProgressComponent from '../components/ProgressComponent'\nimport CheckIcon from '@material-ui/icons/Check';\n\nexport class RunBackend extends React.Component {\n    render() {\n        const { parent } = this.props;\n        const { ctcInfoStr } = this.state || {};\n        return (\n            <div><Heading>Customer</Heading>\n                <Text>\n                    IBO will deploy the contract.\n                </Text>\n                <Text>\n                    Get contract info from IBO and paste it here:\n                </Text>\n                <textarea\n                    className='ContractInfo'\n                    spellCheck='false'\n                    onChange={(e) => this.setState({ ctcInfoStr: e.currentTarget.value })}\n                    placeholder='{}'\n                />\n                <br />\n                <Button\n                    disabled={!ctcInfoStr}\n                    onClick={() => parent.runBackend(ctcInfoStr)}\n                ><Text>Connect</Text></Button>\n            </div>\n        );\n    }\n}\n\nexport class AcceptTerms extends React.Component {\n    render() {\n        const { parent, terms, resolveAcceptTerms } = this.props;\n\n        return (\n            <div>\n                <Heading>Customer - Accept Terms (Step 2/14)</Heading>\n                <Text>\n                    Do you want to accept the terms {terms}?\n                </Text>\n\n                <br />\n                <Button\n\n                    onClick={() => {\n                        resolveAcceptTerms(true)\n                        parent.acceptedTerms()\n                    }}\n                ><Text>Accept Terms</Text></Button>\n            </div>\n        );\n    }\n}\n\n\n\n\nexport class WaitingForProduct extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            status: \"\",\n            step: \"\",\n\n        }\n        this.interval = setInterval((e) => this.updateStep(e), 2000);\n\n\n    }\n\n    async updateStep(e) {\n        const status = await this.props.ctc.getViews().Main.status()\n        const step = await this.props.ctc.getViews().Main.step()\n        this.setState({ status, step })\n\n    }\n\n    render() {\n\n\n        return (\n            <div><Heading>Customer</Heading>\n                <ProgressComponent />\n                <Text>\n                    Waiting for product. This will refresh when product is shipped.\n                </Text><br />\n                <Text>\n                    <Heading>{this.state.status ? this.state.status[1] : \"...\"}</Heading>\n                </Text>\n\n                <Text>\n                    <Heading>{this.state.step ? this.state.step[1].toString() + \" / 13\" : \"...\"}</Heading>\n                </Text>  <Line percent={(this.state.step ? this.state.step[1].toNumber() : 0) * 100 / 14} strokeWidth=\"4\" strokeColor=\"#D3D3D3\" />\n\n\n            </div>\n        );\n    }\n}\n\nexport class ReceivedProduct extends React.Component {\n    render() {\n        const { parent, terms, from, resolveProductReceived } = this.props;\n        return (\n            <div><Heading>Customer - Confirm receiving the product (Step 13/14)</Heading>\n                <Text>\n                    Did you receive the product {terms}?\n                </Text>\n\n                <br />\n                <Button\n\n                    onClick={() => {\n                        resolveProductReceived(true)\n                        parent.finished()\n                    }}\n                ><Text>Acknowledge</Text></Button>\n            </div>\n        );\n    }\n}\n\n\nexport class Finished extends React.Component {\n    render() {\n\n\n        return (\n            <div><Heading>Customer</Heading>\n                <div className=\"alert alert-success\" role=\"alert\">\n                    <h4 class=\"alert-heading\">Done!</h4>\n                    <CheckIcon />\n                    <Text>\n                        You've received the product.\n                    </Text>\n\n                </div>\n\n\n            </div>\n        );\n    }\n}\n\n\nexport class ApproveRequest extends React.Component {\n    render() {\n        const { requestStandard } = this.props;\n        if (!requestStandard) {\n            return (\n                <div><Heading>Customer</Heading>\n                    <Text>\n                        Once IBO has submitted their terms,\n                        you will be prompted to confirm them.\n                    </Text></div>\n            );\n        } else {\n            return (\n                <Text>\n                    You have received a prompt to pay IBO's requested amount.\n                </Text>\n            );\n        }\n    }\n}\n\nexport class CustomerWrapper extends React.Component {\n    render() {\n        const { customer } = this.props;\n        return (\n            <div className='Customer'>\n                <NavbarComponent />\n                {customer}\n            </div>\n        );\n    }\n}","// Automatically generated with Reach 0.1.2\n/* eslint-disable */\nexport const _version = '0.1.2';\n\n\nexport function getExports(s) {\n  const stdlib = s.reachStdlib;\n  return {\n    };\n  };\n\nexport function _getViews(s, viewlib) {\n  const stdlib = s.reachStdlib;\n  const ctc0 = stdlib.T_Bytes(stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 64));\n  const ctc1 = stdlib.T_UInt;\n  \n  return {\n    infos: {\n      \"Main\": {\n        status: {\n          decode: async (i, svs, args) => {\n            if (stdlib.eq(i, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 1))) {\n              const [] = svs;\n              return (await ((async () => {\n                \n                \n                return 'Ibo shipped the product to the customer.                        ';}))(...args));\n              }\n            if (stdlib.eq(i, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2))) {\n              const [] = svs;\n              return (await ((async () => {\n                \n                \n                return 'IBO received the certified product.                             ';}))(...args));\n              }\n            if (stdlib.eq(i, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 3))) {\n              const [] = svs;\n              return (await ((async () => {\n                \n                \n                return 'Certification Authority shipped product to IBO.                 ';}))(...args));\n              }\n            if (stdlib.eq(i, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 4))) {\n              const [] = svs;\n              return (await ((async () => {\n                \n                \n                return 'Certification Authority successfully certified the product!     ';}))(...args));\n              }\n            if (stdlib.eq(i, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 5))) {\n              const [] = svs;\n              return (await ((async () => {\n                \n                \n                return 'Certification Authority received the product.                   ';}))(...args));\n              }\n            if (stdlib.eq(i, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 6))) {\n              const [] = svs;\n              return (await ((async () => {\n                \n                \n                return 'IBO shipped the product to the Certification Authority.         ';}))(...args));\n              }\n            if (stdlib.eq(i, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 7))) {\n              const [] = svs;\n              return (await ((async () => {\n                \n                \n                return 'IBO received finished product.                                  ';}))(...args));\n              }\n            if (stdlib.eq(i, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 8))) {\n              const [] = svs;\n              return (await ((async () => {\n                \n                \n                return 'Supplier shipped the finished product to IBO.                   ';}))(...args));\n              }\n            if (stdlib.eq(i, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 9))) {\n              const [] = svs;\n              return (await ((async () => {\n                \n                \n                return 'Supplier received the CAD files.                                ';}))(...args));\n              }\n            if (stdlib.eq(i, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 10))) {\n              const [] = svs;\n              return (await ((async () => {\n                \n                \n                return 'IBO sent CAD files to the Supplier.                             ';}))(...args));\n              }\n            if (stdlib.eq(i, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 11))) {\n              const [] = svs;\n              return (await ((async () => {\n                \n                \n                return 'Customer paid the 5 requested algos.                            ';}))(...args));\n              }\n            if (stdlib.eq(i, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 12))) {\n              const [] = svs;\n              return (await ((async () => {\n                \n                \n                return 'Customer accepted the terms.                                    ';}))(...args));\n              }\n            if (stdlib.eq(i, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 13))) {\n              const [] = svs;\n              return (await ((async () => {\n                \n                \n                return 'IBO showed the Terms for the product.                           ';}))(...args));\n              }\n            \n            stdlib.assert(false, 'illegal view')\n            },\n          ty: ctc0\n          },\n        step: {\n          decode: async (i, svs, args) => {\n            if (stdlib.eq(i, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 1))) {\n              const [] = svs;\n              return (await ((async () => {\n                \n                \n                return stdlib.checkedBigNumberify('./index.rsh:163:14:decimal', stdlib.UInt_max, 13);}))(...args));\n              }\n            if (stdlib.eq(i, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 2))) {\n              const [] = svs;\n              return (await ((async () => {\n                \n                \n                return stdlib.checkedBigNumberify('./index.rsh:153:14:decimal', stdlib.UInt_max, 12);}))(...args));\n              }\n            if (stdlib.eq(i, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 3))) {\n              const [] = svs;\n              return (await ((async () => {\n                \n                \n                return stdlib.checkedBigNumberify('./index.rsh:142:14:decimal', stdlib.UInt_max, 11);}))(...args));\n              }\n            if (stdlib.eq(i, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 4))) {\n              const [] = svs;\n              return (await ((async () => {\n                \n                \n                return stdlib.checkedBigNumberify('./index.rsh:131:14:decimal', stdlib.UInt_max, 10);}))(...args));\n              }\n            if (stdlib.eq(i, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 5))) {\n              const [] = svs;\n              return (await ((async () => {\n                \n                \n                return stdlib.checkedBigNumberify('./index.rsh:121:14:decimal', stdlib.UInt_max, 9);}))(...args));\n              }\n            if (stdlib.eq(i, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 6))) {\n              const [] = svs;\n              return (await ((async () => {\n                \n                \n                return stdlib.checkedBigNumberify('./index.rsh:112:14:decimal', stdlib.UInt_max, 8);}))(...args));\n              }\n            if (stdlib.eq(i, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 7))) {\n              const [] = svs;\n              return (await ((async () => {\n                \n                \n                return stdlib.checkedBigNumberify('./index.rsh:102:14:decimal', stdlib.UInt_max, 7);}))(...args));\n              }\n            if (stdlib.eq(i, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 8))) {\n              const [] = svs;\n              return (await ((async () => {\n                \n                \n                return stdlib.checkedBigNumberify('./index.rsh:91:14:decimal', stdlib.UInt_max, 6);}))(...args));\n              }\n            if (stdlib.eq(i, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 9))) {\n              const [] = svs;\n              return (await ((async () => {\n                \n                \n                return stdlib.checkedBigNumberify('./index.rsh:82:14:decimal', stdlib.UInt_max, 5);}))(...args));\n              }\n            if (stdlib.eq(i, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 10))) {\n              const [] = svs;\n              return (await ((async () => {\n                \n                \n                return stdlib.checkedBigNumberify('./index.rsh:72:14:decimal', stdlib.UInt_max, 4);}))(...args));\n              }\n            if (stdlib.eq(i, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 11))) {\n              const [] = svs;\n              return (await ((async () => {\n                \n                \n                return stdlib.checkedBigNumberify('./index.rsh:62:14:decimal', stdlib.UInt_max, 3);}))(...args));\n              }\n            if (stdlib.eq(i, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 12))) {\n              const [] = svs;\n              return (await ((async () => {\n                \n                \n                return stdlib.checkedBigNumberify('./index.rsh:58:14:decimal', stdlib.UInt_max, 2);}))(...args));\n              }\n            if (stdlib.eq(i, stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 13))) {\n              const [] = svs;\n              return (await ((async () => {\n                \n                \n                return stdlib.checkedBigNumberify('./index.rsh:48:14:decimal', stdlib.UInt_max, 1);}))(...args));\n              }\n            \n            stdlib.assert(false, 'illegal view')\n            },\n          ty: ctc1\n          }\n        }\n      },\n    views: {\n      1: [],\n      2: [],\n      3: [],\n      4: [],\n      5: [],\n      6: [],\n      7: [],\n      8: [],\n      9: [],\n      10: [],\n      11: [],\n      12: [],\n      13: []\n      }\n    };\n  \n  };\n\nexport function _getMaps(s) {\n  const stdlib = s.reachStdlib;\n  const ctc0 = stdlib.T_Tuple([]);\n  return {\n    mapDataTy: ctc0\n    };\n  };\n\nexport async function Cert(ctc, interact) {\n  if (ctc.sendrecv === undefined) {\n    return Promise.reject(new Error(`The backend for Cert expects to receive a contract as its first argument.`));}\n  if (typeof(interact) !== 'object') {\n    return Promise.reject(new Error(`The backend for Cert expects to receive an interact object as its second argument.`));}\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_Bytes(stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 64));\n  const ctc1 = stdlib.T_UInt;\n  const ctc2 = stdlib.T_Bool;\n  const ctc3 = stdlib.T_Tuple([ctc1]);\n  const ctc4 = stdlib.T_Address;\n  const ctc5 = stdlib.T_Tuple([ctc1, ctc4, ctc1, ctc4, ctc1]);\n  const ctc6 = stdlib.T_Tuple([ctc1, ctc4, ctc1, ctc4]);\n  const ctc7 = stdlib.T_Tuple([ctc1, ctc4, ctc1, ctc4, ctc4, ctc1]);\n  const ctc8 = stdlib.T_Tuple([ctc1, ctc4, ctc1, ctc4, ctc4]);\n  \n  \n  const v19 = await ctc.creationTime();\n  const txn1 = await (ctc.recv(1, 2, [ctc0, ctc1], false, false));\n  const [v25, v26] = txn1.data;\n  const v28 = txn1.time;\n  const v24 = txn1.from;\n  ;\n  const txn2 = await (ctc.recv(2, 1, [ctc2], false, false));\n  const [v34] = txn2.data;\n  const v36 = txn2.time;\n  const v33 = txn2.from;\n  ;\n  const txn3 = await (ctc.recv(3, 0, [], false, false));\n  const [] = txn3.data;\n  const v41 = txn3.time;\n  const v37 = txn3.from;\n  ;\n  const v40 = stdlib.addressEq(v33, v37);\n  stdlib.assert(v40, {\n    at: './index.rsh:60:4:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Cert'\n    });\n  const txn4 = await (ctc.recv(4, 1, [ctc2], false, false));\n  const [v47] = txn4.data;\n  const v50 = txn4.time;\n  const v46 = txn4.from;\n  ;\n  const v49 = stdlib.addressEq(v24, v46);\n  stdlib.assert(v49, {\n    at: './index.rsh:70:5:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Cert'\n    });\n  const txn5 = await (ctc.recv(5, 1, [ctc2], false, false));\n  const [v56] = txn5.data;\n  const v58 = txn5.time;\n  const v55 = txn5.from;\n  ;\n  const txn6 = await (ctc.recv(6, 1, [ctc2], false, false));\n  const [v64] = txn6.data;\n  const v67 = txn6.time;\n  const v63 = txn6.from;\n  ;\n  const v66 = stdlib.addressEq(v55, v63);\n  stdlib.assert(v66, {\n    at: './index.rsh:89:5:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Cert'\n    });\n  const txn7 = await (ctc.recv(7, 1, [ctc2], false, false));\n  const [v73] = txn7.data;\n  const v76 = txn7.time;\n  const v72 = txn7.from;\n  ;\n  const v75 = stdlib.addressEq(v24, v72);\n  stdlib.assert(v75, {\n    at: './index.rsh:100:5:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Cert'\n    });\n  const txn8 = await (ctc.recv(8, 1, [ctc2], false, false));\n  const [v82] = txn8.data;\n  const v85 = txn8.time;\n  const v81 = txn8.from;\n  ;\n  const v84 = stdlib.addressEq(v24, v81);\n  stdlib.assert(v84, {\n    at: './index.rsh:110:5:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Cert'\n    });\n  const v89 = stdlib.protect(ctc2, await interact.ackProductReceived(v25), {\n    at: './index.rsh:117:72:application',\n    fs: ['at ./index.rsh:116:9:application call to [unknown function] (defined at: ./index.rsh:116:13:function exp)'],\n    msg: 'ackProductReceived',\n    who: 'Cert'\n    });\n  \n  const txn9 = await (ctc.sendrecv(9, 1, stdlib.checkedBigNumberify('./index.rsh:119:8:dot', stdlib.UInt_max, 3), [ctc4, ctc1, ctc4, ctc1, ctc2], [v24, v26, v33, v85, v89], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [ctc2], true, true, false, (async (txn9) => {\n    const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n    \n    sim_r.prevSt = stdlib.digest(ctc5, [stdlib.checkedBigNumberify('./index.rsh:119:8:dot', stdlib.UInt_max, 8), v24, v26, v33, v85]);\n    sim_r.prevSt_noPrevTime = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:119:8:dot', stdlib.UInt_max, 8), v24, v26, v33]);\n    const [v91] = txn9.data;\n    const v93 = txn9.time;\n    const v90 = txn9.from;\n    \n    sim_r.txns.push({\n      amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n      kind: 'to',\n      tok: undefined\n      });\n    sim_r.nextSt = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:122:13:after expr stmt semicolon', stdlib.UInt_max, 9), v24, v26, v33, v90, v93]);\n    sim_r.nextSt_noTime = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:122:13:after expr stmt semicolon', stdlib.UInt_max, 9), v24, v26, v33, v90]);\n    sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:122:13:after expr stmt semicolon', stdlib.UInt_max, 5)]];\n    sim_r.isHalt = false;\n    \n    return sim_r;\n    })));\n  const [v91] = txn9.data;\n  const v93 = txn9.time;\n  const v90 = txn9.from;\n  ;\n  const v97 = stdlib.protect(ctc2, await interact.certified(v25), {\n    at: './index.rsh:127:51:application',\n    fs: ['at ./index.rsh:126:8:application call to [unknown function] (defined at: ./index.rsh:126:12:function exp)'],\n    msg: 'certified',\n    who: 'Cert'\n    });\n  \n  const txn10 = await (ctc.sendrecv(10, 1, stdlib.checkedBigNumberify('./index.rsh:129:6:dot', stdlib.UInt_max, 4), [ctc4, ctc1, ctc4, ctc4, ctc1, ctc2], [v24, v26, v33, v90, v93, v97], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [ctc2], true, true, false, (async (txn10) => {\n    const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n    \n    sim_r.prevSt = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:129:6:dot', stdlib.UInt_max, 9), v24, v26, v33, v90, v93]);\n    sim_r.prevSt_noPrevTime = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:129:6:dot', stdlib.UInt_max, 9), v24, v26, v33, v90]);\n    const [v99] = txn10.data;\n    const v102 = txn10.time;\n    const v98 = txn10.from;\n    \n    sim_r.txns.push({\n      amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n      kind: 'to',\n      tok: undefined\n      });\n    const v101 = stdlib.addressEq(v90, v98);\n    stdlib.assert(v101, {\n      at: './index.rsh:129:6:dot',\n      fs: [],\n      msg: 'sender correct',\n      who: 'Cert'\n      });\n    sim_r.nextSt = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:132:11:after expr stmt semicolon', stdlib.UInt_max, 10), v24, v26, v33, v90, v102]);\n    sim_r.nextSt_noTime = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:132:11:after expr stmt semicolon', stdlib.UInt_max, 10), v24, v26, v33, v90]);\n    sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:132:11:after expr stmt semicolon', stdlib.UInt_max, 4)]];\n    sim_r.isHalt = false;\n    \n    return sim_r;\n    })));\n  const [v99] = txn10.data;\n  const v102 = txn10.time;\n  const v98 = txn10.from;\n  ;\n  const v101 = stdlib.addressEq(v90, v98);\n  stdlib.assert(v101, {\n    at: './index.rsh:129:6:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Cert'\n    });\n  const v106 = stdlib.protect(ctc2, await interact.shippedProduct('IBO                                                             ', 'successful certification                                        '), {\n    at: './index.rsh:138:53:application',\n    fs: ['at ./index.rsh:137:8:application call to [unknown function] (defined at: ./index.rsh:137:12:function exp)'],\n    msg: 'shippedProduct',\n    who: 'Cert'\n    });\n  \n  const txn11 = await (ctc.sendrecv(11, 1, stdlib.checkedBigNumberify('./index.rsh:140:6:dot', stdlib.UInt_max, 4), [ctc4, ctc1, ctc4, ctc4, ctc1, ctc2], [v24, v26, v33, v90, v102, v106], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [ctc2], true, true, false, (async (txn11) => {\n    const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n    \n    sim_r.prevSt = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:140:6:dot', stdlib.UInt_max, 10), v24, v26, v33, v90, v102]);\n    sim_r.prevSt_noPrevTime = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:140:6:dot', stdlib.UInt_max, 10), v24, v26, v33, v90]);\n    const [v108] = txn11.data;\n    const v111 = txn11.time;\n    const v107 = txn11.from;\n    \n    sim_r.txns.push({\n      amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n      kind: 'to',\n      tok: undefined\n      });\n    const v110 = stdlib.addressEq(v90, v107);\n    stdlib.assert(v110, {\n      at: './index.rsh:140:6:dot',\n      fs: [],\n      msg: 'sender correct',\n      who: 'Cert'\n      });\n    sim_r.nextSt = stdlib.digest(ctc5, [stdlib.checkedBigNumberify('./index.rsh:143:11:after expr stmt semicolon', stdlib.UInt_max, 11), v24, v26, v33, v111]);\n    sim_r.nextSt_noTime = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:143:11:after expr stmt semicolon', stdlib.UInt_max, 11), v24, v26, v33]);\n    sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:143:11:after expr stmt semicolon', stdlib.UInt_max, 3)]];\n    sim_r.isHalt = false;\n    \n    return sim_r;\n    })));\n  const [v108] = txn11.data;\n  const v111 = txn11.time;\n  const v107 = txn11.from;\n  ;\n  const v110 = stdlib.addressEq(v90, v107);\n  stdlib.assert(v110, {\n    at: './index.rsh:140:6:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Cert'\n    });\n  const txn12 = await (ctc.recv(12, 1, [ctc2], false, false));\n  const [v117] = txn12.data;\n  const v120 = txn12.time;\n  const v116 = txn12.from;\n  ;\n  const v119 = stdlib.addressEq(v24, v116);\n  stdlib.assert(v119, {\n    at: './index.rsh:151:5:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Cert'\n    });\n  const txn13 = await (ctc.recv(13, 1, [ctc2], false, false));\n  const [v126] = txn13.data;\n  const v129 = txn13.time;\n  const v125 = txn13.from;\n  ;\n  const v128 = stdlib.addressEq(v24, v125);\n  stdlib.assert(v128, {\n    at: './index.rsh:161:5:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Cert'\n    });\n  const txn14 = await (ctc.recv(14, 1, [ctc2], false, false));\n  const [v135] = txn14.data;\n  const v138 = txn14.time;\n  const v134 = txn14.from;\n  ;\n  const v137 = stdlib.addressEq(v33, v134);\n  stdlib.assert(v137, {\n    at: './index.rsh:169:6:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Cert'\n    });\n  ;\n  return;\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  };\nexport async function Customer(ctc, interact) {\n  if (ctc.sendrecv === undefined) {\n    return Promise.reject(new Error(`The backend for Customer expects to receive a contract as its first argument.`));}\n  if (typeof(interact) !== 'object') {\n    return Promise.reject(new Error(`The backend for Customer expects to receive an interact object as its second argument.`));}\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_Bytes(stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 64));\n  const ctc1 = stdlib.T_UInt;\n  const ctc2 = stdlib.T_Bool;\n  const ctc3 = stdlib.T_Tuple([]);\n  const ctc4 = stdlib.T_Address;\n  const ctc5 = stdlib.T_Tuple([ctc1, ctc4, ctc1, ctc4, ctc1]);\n  const ctc6 = stdlib.T_Tuple([ctc1, ctc4, ctc1, ctc4]);\n  const ctc7 = stdlib.T_Tuple([ctc1]);\n  const ctc8 = stdlib.T_Tuple([ctc1, ctc4, ctc1, ctc1]);\n  const ctc9 = stdlib.T_Tuple([ctc1, ctc4, ctc1]);\n  \n  \n  const v19 = await ctc.creationTime();\n  const txn1 = await (ctc.recv(1, 2, [ctc0, ctc1], false, false));\n  const [v25, v26] = txn1.data;\n  const v28 = txn1.time;\n  const v24 = txn1.from;\n  ;\n  const v32 = stdlib.protect(ctc2, await interact.acceptTerms(v25), {\n    at: './index.rsh:55:52:application',\n    fs: ['at ./index.rsh:54:8:application call to [unknown function] (defined at: ./index.rsh:54:12:function exp)'],\n    msg: 'acceptTerms',\n    who: 'Customer'\n    });\n  \n  const txn2 = await (ctc.sendrecv(2, 1, stdlib.checkedBigNumberify('./index.rsh:56:4:dot', stdlib.UInt_max, 2), [ctc4, ctc1, ctc1, ctc2], [v24, v26, v28, v32], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [ctc2], true, true, false, (async (txn2) => {\n    const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n    \n    sim_r.prevSt = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:56:4:dot', stdlib.UInt_max, 1), v24, v26, v28]);\n    sim_r.prevSt_noPrevTime = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:56:4:dot', stdlib.UInt_max, 1), v24, v26]);\n    const [v34] = txn2.data;\n    const v36 = txn2.time;\n    const v33 = txn2.from;\n    \n    sim_r.txns.push({\n      amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n      kind: 'to',\n      tok: undefined\n      });\n    sim_r.nextSt = stdlib.digest(ctc5, [stdlib.checkedBigNumberify('./index.rsh:59:9:after expr stmt semicolon', stdlib.UInt_max, 2), v24, v26, v33, v36]);\n    sim_r.nextSt_noTime = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:59:9:after expr stmt semicolon', stdlib.UInt_max, 2), v24, v26, v33]);\n    sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:59:9:after expr stmt semicolon', stdlib.UInt_max, 12)]];\n    sim_r.isHalt = false;\n    \n    return sim_r;\n    })));\n  const [v34] = txn2.data;\n  const v36 = txn2.time;\n  const v33 = txn2.from;\n  ;\n  const txn3 = await (ctc.sendrecv(3, 0, stdlib.checkedBigNumberify('./index.rsh:60:4:dot', stdlib.UInt_max, 3), [ctc4, ctc1, ctc4, ctc1], [v24, v26, v33, v36], [v26, []], [], true, true, false, (async (txn3) => {\n    const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n    \n    sim_r.prevSt = stdlib.digest(ctc5, [stdlib.checkedBigNumberify('./index.rsh:60:4:dot', stdlib.UInt_max, 2), v24, v26, v33, v36]);\n    sim_r.prevSt_noPrevTime = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:60:4:dot', stdlib.UInt_max, 2), v24, v26, v33]);\n    const [] = txn3.data;\n    const v41 = txn3.time;\n    const v37 = txn3.from;\n    \n    sim_r.txns.push({\n      amt: v26,\n      kind: 'to',\n      tok: undefined\n      });\n    const v40 = stdlib.addressEq(v33, v37);\n    stdlib.assert(v40, {\n      at: './index.rsh:60:4:dot',\n      fs: [],\n      msg: 'sender correct',\n      who: 'Customer'\n      });\n    sim_r.nextSt = stdlib.digest(ctc5, [stdlib.checkedBigNumberify('./index.rsh:63:9:after expr stmt semicolon', stdlib.UInt_max, 3), v24, v26, v33, v41]);\n    sim_r.nextSt_noTime = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:63:9:after expr stmt semicolon', stdlib.UInt_max, 3), v24, v26, v33]);\n    sim_r.view = [ctc7, [stdlib.checkedBigNumberify('./index.rsh:63:9:after expr stmt semicolon', stdlib.UInt_max, 11)]];\n    sim_r.isHalt = false;\n    \n    return sim_r;\n    })));\n  const [] = txn3.data;\n  const v41 = txn3.time;\n  const v37 = txn3.from;\n  ;\n  const v40 = stdlib.addressEq(v33, v37);\n  stdlib.assert(v40, {\n    at: './index.rsh:60:4:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Customer'\n    });\n  const txn4 = await (ctc.recv(4, 1, [ctc2], false, false));\n  const [v47] = txn4.data;\n  const v50 = txn4.time;\n  const v46 = txn4.from;\n  ;\n  const v49 = stdlib.addressEq(v24, v46);\n  stdlib.assert(v49, {\n    at: './index.rsh:70:5:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Customer'\n    });\n  const txn5 = await (ctc.recv(5, 1, [ctc2], false, false));\n  const [v56] = txn5.data;\n  const v58 = txn5.time;\n  const v55 = txn5.from;\n  ;\n  const txn6 = await (ctc.recv(6, 1, [ctc2], false, false));\n  const [v64] = txn6.data;\n  const v67 = txn6.time;\n  const v63 = txn6.from;\n  ;\n  const v66 = stdlib.addressEq(v55, v63);\n  stdlib.assert(v66, {\n    at: './index.rsh:89:5:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Customer'\n    });\n  const txn7 = await (ctc.recv(7, 1, [ctc2], false, false));\n  const [v73] = txn7.data;\n  const v76 = txn7.time;\n  const v72 = txn7.from;\n  ;\n  const v75 = stdlib.addressEq(v24, v72);\n  stdlib.assert(v75, {\n    at: './index.rsh:100:5:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Customer'\n    });\n  const txn8 = await (ctc.recv(8, 1, [ctc2], false, false));\n  const [v82] = txn8.data;\n  const v85 = txn8.time;\n  const v81 = txn8.from;\n  ;\n  const v84 = stdlib.addressEq(v24, v81);\n  stdlib.assert(v84, {\n    at: './index.rsh:110:5:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Customer'\n    });\n  const txn9 = await (ctc.recv(9, 1, [ctc2], false, false));\n  const [v91] = txn9.data;\n  const v93 = txn9.time;\n  const v90 = txn9.from;\n  ;\n  const txn10 = await (ctc.recv(10, 1, [ctc2], false, false));\n  const [v99] = txn10.data;\n  const v102 = txn10.time;\n  const v98 = txn10.from;\n  ;\n  const v101 = stdlib.addressEq(v90, v98);\n  stdlib.assert(v101, {\n    at: './index.rsh:129:6:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Customer'\n    });\n  const txn11 = await (ctc.recv(11, 1, [ctc2], false, false));\n  const [v108] = txn11.data;\n  const v111 = txn11.time;\n  const v107 = txn11.from;\n  ;\n  const v110 = stdlib.addressEq(v90, v107);\n  stdlib.assert(v110, {\n    at: './index.rsh:140:6:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Customer'\n    });\n  const txn12 = await (ctc.recv(12, 1, [ctc2], false, false));\n  const [v117] = txn12.data;\n  const v120 = txn12.time;\n  const v116 = txn12.from;\n  ;\n  const v119 = stdlib.addressEq(v24, v116);\n  stdlib.assert(v119, {\n    at: './index.rsh:151:5:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Customer'\n    });\n  const txn13 = await (ctc.recv(13, 1, [ctc2], false, false));\n  const [v126] = txn13.data;\n  const v129 = txn13.time;\n  const v125 = txn13.from;\n  ;\n  const v128 = stdlib.addressEq(v24, v125);\n  stdlib.assert(v128, {\n    at: './index.rsh:161:5:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Customer'\n    });\n  const v133 = stdlib.protect(ctc2, await interact.ackProductReceived(v25), {\n    at: './index.rsh:168:70:application',\n    fs: ['at ./index.rsh:167:8:application call to [unknown function] (defined at: ./index.rsh:167:12:function exp)'],\n    msg: 'ackProductReceived',\n    who: 'Customer'\n    });\n  \n  const txn14 = await (ctc.sendrecv(14, 1, stdlib.checkedBigNumberify('./index.rsh:169:6:dot', stdlib.UInt_max, 3), [ctc4, ctc1, ctc4, ctc1, ctc2], [v24, v26, v33, v129, v133], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [ctc2], true, true, false, (async (txn14) => {\n    const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n    \n    sim_r.prevSt = stdlib.digest(ctc5, [stdlib.checkedBigNumberify('./index.rsh:169:6:dot', stdlib.UInt_max, 13), v24, v26, v33, v129]);\n    sim_r.prevSt_noPrevTime = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:169:6:dot', stdlib.UInt_max, 13), v24, v26, v33]);\n    const [v135] = txn14.data;\n    const v138 = txn14.time;\n    const v134 = txn14.from;\n    \n    sim_r.txns.push({\n      amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n      kind: 'to',\n      tok: undefined\n      });\n    const v137 = stdlib.addressEq(v33, v134);\n    stdlib.assert(v137, {\n      at: './index.rsh:169:6:dot',\n      fs: [],\n      msg: 'sender correct',\n      who: 'Customer'\n      });\n    sim_r.txns.push({\n      amt: v26,\n      kind: 'from',\n      to: v24,\n      tok: undefined\n      });\n    sim_r.txns.push({\n      kind: 'halt',\n      tok: undefined\n      })\n    sim_r.nextSt = stdlib.digest(ctc3, []);\n    sim_r.nextSt_noTime = stdlib.digest(ctc3, []);\n    sim_r.view = [ctc3, []];\n    sim_r.isHalt = true;\n    \n    return sim_r;\n    })));\n  const [v135] = txn14.data;\n  const v138 = txn14.time;\n  const v134 = txn14.from;\n  ;\n  const v137 = stdlib.addressEq(v33, v134);\n  stdlib.assert(v137, {\n    at: './index.rsh:169:6:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Customer'\n    });\n  ;\n  return;\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  };\nexport async function IBO(ctc, interact) {\n  if (ctc.sendrecv === undefined) {\n    return Promise.reject(new Error(`The backend for IBO expects to receive a contract as its first argument.`));}\n  if (typeof(interact) !== 'object') {\n    return Promise.reject(new Error(`The backend for IBO expects to receive an interact object as its second argument.`));}\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_UInt;\n  const ctc1 = stdlib.T_Bytes(stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 64));\n  const ctc2 = stdlib.T_Bool;\n  const ctc3 = stdlib.T_Tuple([ctc0]);\n  const ctc4 = stdlib.T_Address;\n  const ctc5 = stdlib.T_Tuple([ctc0, ctc4, ctc0, ctc4, ctc0]);\n  const ctc6 = stdlib.T_Tuple([ctc0, ctc4, ctc0, ctc4]);\n  const ctc7 = stdlib.T_Tuple([ctc0, ctc4, ctc0, ctc0]);\n  const ctc8 = stdlib.T_Tuple([ctc0, ctc4, ctc0]);\n  const ctc9 = stdlib.T_Tuple([ctc0, ctc0]);\n  \n  \n  const v19 = await ctc.creationTime();\n  const v18 = stdlib.protect(ctc0, interact.request, 'for IBO\\'s interact field request');\n  \n  const v23 = stdlib.protect(ctc1, await interact.showTerms(), {\n    at: './index.rsh:44:46:application',\n    fs: ['at ./index.rsh:43:7:application call to [unknown function] (defined at: ./index.rsh:43:11:function exp)'],\n    msg: 'showTerms',\n    who: 'IBO'\n    });\n  \n  const txn1 = await (ctc.sendrecv(1, 2, stdlib.checkedBigNumberify('./index.rsh:46:5:dot', stdlib.UInt_max, 0), [ctc0, ctc1, ctc0], [v19, v23, v18], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [ctc1, ctc0], true, true, false, (async (txn1) => {\n    const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n    \n    sim_r.prevSt = stdlib.digest(ctc9, [stdlib.checkedBigNumberify('./index.rsh:46:5:dot', stdlib.UInt_max, 0), v19]);\n    sim_r.prevSt_noPrevTime = stdlib.digest(ctc3, [stdlib.checkedBigNumberify('./index.rsh:46:5:dot', stdlib.UInt_max, 0)]);\n    const [v25, v26] = txn1.data;\n    const v28 = txn1.time;\n    const v24 = txn1.from;\n    \n    sim_r.txns.push({\n      amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n      kind: 'to',\n      tok: undefined\n      });\n    sim_r.nextSt = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:49:9:after expr stmt semicolon', stdlib.UInt_max, 1), v24, v26, v28]);\n    sim_r.nextSt_noTime = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:49:9:after expr stmt semicolon', stdlib.UInt_max, 1), v24, v26]);\n    sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:49:9:after expr stmt semicolon', stdlib.UInt_max, 13)]];\n    sim_r.isHalt = false;\n    \n    return sim_r;\n    })));\n  const [v25, v26] = txn1.data;\n  const v28 = txn1.time;\n  const v24 = txn1.from;\n  ;\n  const txn2 = await (ctc.recv(2, 1, [ctc2], false, false));\n  const [v34] = txn2.data;\n  const v36 = txn2.time;\n  const v33 = txn2.from;\n  ;\n  const txn3 = await (ctc.recv(3, 0, [], false, false));\n  const [] = txn3.data;\n  const v41 = txn3.time;\n  const v37 = txn3.from;\n  ;\n  const v40 = stdlib.addressEq(v33, v37);\n  stdlib.assert(v40, {\n    at: './index.rsh:60:4:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'IBO'\n    });\n  const v45 = stdlib.protect(ctc2, await interact.sentCADtoSupplier(v25), {\n    at: './index.rsh:67:56:application',\n    fs: ['at ./index.rsh:66:7:application call to [unknown function] (defined at: ./index.rsh:66:11:function exp)'],\n    msg: 'sentCADtoSupplier',\n    who: 'IBO'\n    });\n  \n  const txn4 = await (ctc.sendrecv(4, 1, stdlib.checkedBigNumberify('./index.rsh:70:5:dot', stdlib.UInt_max, 3), [ctc4, ctc0, ctc4, ctc0, ctc2], [v24, v26, v33, v41, v45], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [ctc2], true, true, false, (async (txn4) => {\n    const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n    \n    sim_r.prevSt = stdlib.digest(ctc5, [stdlib.checkedBigNumberify('./index.rsh:70:5:dot', stdlib.UInt_max, 3), v24, v26, v33, v41]);\n    sim_r.prevSt_noPrevTime = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:70:5:dot', stdlib.UInt_max, 3), v24, v26, v33]);\n    const [v47] = txn4.data;\n    const v50 = txn4.time;\n    const v46 = txn4.from;\n    \n    sim_r.txns.push({\n      amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n      kind: 'to',\n      tok: undefined\n      });\n    const v49 = stdlib.addressEq(v24, v46);\n    stdlib.assert(v49, {\n      at: './index.rsh:70:5:dot',\n      fs: [],\n      msg: 'sender correct',\n      who: 'IBO'\n      });\n    sim_r.nextSt = stdlib.digest(ctc5, [stdlib.checkedBigNumberify('./index.rsh:73:9:after expr stmt semicolon', stdlib.UInt_max, 4), v24, v26, v33, v50]);\n    sim_r.nextSt_noTime = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:73:9:after expr stmt semicolon', stdlib.UInt_max, 4), v24, v26, v33]);\n    sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:73:9:after expr stmt semicolon', stdlib.UInt_max, 10)]];\n    sim_r.isHalt = false;\n    \n    return sim_r;\n    })));\n  const [v47] = txn4.data;\n  const v50 = txn4.time;\n  const v46 = txn4.from;\n  ;\n  const v49 = stdlib.addressEq(v24, v46);\n  stdlib.assert(v49, {\n    at: './index.rsh:70:5:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'IBO'\n    });\n  const txn5 = await (ctc.recv(5, 1, [ctc2], false, false));\n  const [v56] = txn5.data;\n  const v58 = txn5.time;\n  const v55 = txn5.from;\n  ;\n  const txn6 = await (ctc.recv(6, 1, [ctc2], false, false));\n  const [v64] = txn6.data;\n  const v67 = txn6.time;\n  const v63 = txn6.from;\n  ;\n  const v66 = stdlib.addressEq(v55, v63);\n  stdlib.assert(v66, {\n    at: './index.rsh:89:5:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'IBO'\n    });\n  const v71 = stdlib.protect(ctc2, await interact.ackProductReceived(v25, 'Supplier                                                        '), {\n    at: './index.rsh:98:68:application',\n    fs: ['at ./index.rsh:97:7:application call to [unknown function] (defined at: ./index.rsh:97:11:function exp)'],\n    msg: 'ackProductReceived',\n    who: 'IBO'\n    });\n  \n  const txn7 = await (ctc.sendrecv(7, 1, stdlib.checkedBigNumberify('./index.rsh:100:5:dot', stdlib.UInt_max, 3), [ctc4, ctc0, ctc4, ctc0, ctc2], [v24, v26, v33, v67, v71], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [ctc2], true, true, false, (async (txn7) => {\n    const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n    \n    sim_r.prevSt = stdlib.digest(ctc5, [stdlib.checkedBigNumberify('./index.rsh:100:5:dot', stdlib.UInt_max, 6), v24, v26, v33, v67]);\n    sim_r.prevSt_noPrevTime = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:100:5:dot', stdlib.UInt_max, 6), v24, v26, v33]);\n    const [v73] = txn7.data;\n    const v76 = txn7.time;\n    const v72 = txn7.from;\n    \n    sim_r.txns.push({\n      amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n      kind: 'to',\n      tok: undefined\n      });\n    const v75 = stdlib.addressEq(v24, v72);\n    stdlib.assert(v75, {\n      at: './index.rsh:100:5:dot',\n      fs: [],\n      msg: 'sender correct',\n      who: 'IBO'\n      });\n    sim_r.nextSt = stdlib.digest(ctc5, [stdlib.checkedBigNumberify('./index.rsh:103:9:after expr stmt semicolon', stdlib.UInt_max, 7), v24, v26, v33, v76]);\n    sim_r.nextSt_noTime = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:103:9:after expr stmt semicolon', stdlib.UInt_max, 7), v24, v26, v33]);\n    sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:103:9:after expr stmt semicolon', stdlib.UInt_max, 7)]];\n    sim_r.isHalt = false;\n    \n    return sim_r;\n    })));\n  const [v73] = txn7.data;\n  const v76 = txn7.time;\n  const v72 = txn7.from;\n  ;\n  const v75 = stdlib.addressEq(v24, v72);\n  stdlib.assert(v75, {\n    at: './index.rsh:100:5:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'IBO'\n    });\n  const v80 = stdlib.protect(ctc2, await interact.shippedProduct('Cert Authority                                                  ', 'of certification                                                '), {\n    at: './index.rsh:108:68:application',\n    fs: ['at ./index.rsh:107:7:application call to [unknown function] (defined at: ./index.rsh:107:11:function exp)'],\n    msg: 'shippedProduct',\n    who: 'IBO'\n    });\n  \n  const txn8 = await (ctc.sendrecv(8, 1, stdlib.checkedBigNumberify('./index.rsh:110:5:dot', stdlib.UInt_max, 3), [ctc4, ctc0, ctc4, ctc0, ctc2], [v24, v26, v33, v76, v80], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [ctc2], true, true, false, (async (txn8) => {\n    const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n    \n    sim_r.prevSt = stdlib.digest(ctc5, [stdlib.checkedBigNumberify('./index.rsh:110:5:dot', stdlib.UInt_max, 7), v24, v26, v33, v76]);\n    sim_r.prevSt_noPrevTime = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:110:5:dot', stdlib.UInt_max, 7), v24, v26, v33]);\n    const [v82] = txn8.data;\n    const v85 = txn8.time;\n    const v81 = txn8.from;\n    \n    sim_r.txns.push({\n      amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n      kind: 'to',\n      tok: undefined\n      });\n    const v84 = stdlib.addressEq(v24, v81);\n    stdlib.assert(v84, {\n      at: './index.rsh:110:5:dot',\n      fs: [],\n      msg: 'sender correct',\n      who: 'IBO'\n      });\n    sim_r.nextSt = stdlib.digest(ctc5, [stdlib.checkedBigNumberify('./index.rsh:113:11:after expr stmt semicolon', stdlib.UInt_max, 8), v24, v26, v33, v85]);\n    sim_r.nextSt_noTime = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:113:11:after expr stmt semicolon', stdlib.UInt_max, 8), v24, v26, v33]);\n    sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:113:11:after expr stmt semicolon', stdlib.UInt_max, 6)]];\n    sim_r.isHalt = false;\n    \n    return sim_r;\n    })));\n  const [v82] = txn8.data;\n  const v85 = txn8.time;\n  const v81 = txn8.from;\n  ;\n  const v84 = stdlib.addressEq(v24, v81);\n  stdlib.assert(v84, {\n    at: './index.rsh:110:5:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'IBO'\n    });\n  const txn9 = await (ctc.recv(9, 1, [ctc2], false, false));\n  const [v91] = txn9.data;\n  const v93 = txn9.time;\n  const v90 = txn9.from;\n  ;\n  const txn10 = await (ctc.recv(10, 1, [ctc2], false, false));\n  const [v99] = txn10.data;\n  const v102 = txn10.time;\n  const v98 = txn10.from;\n  ;\n  const v101 = stdlib.addressEq(v90, v98);\n  stdlib.assert(v101, {\n    at: './index.rsh:129:6:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'IBO'\n    });\n  const txn11 = await (ctc.recv(11, 1, [ctc2], false, false));\n  const [v108] = txn11.data;\n  const v111 = txn11.time;\n  const v107 = txn11.from;\n  ;\n  const v110 = stdlib.addressEq(v90, v107);\n  stdlib.assert(v110, {\n    at: './index.rsh:140:6:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'IBO'\n    });\n  const v115 = stdlib.protect(ctc2, await interact.ackProductReceived(v25, 'Cert Authority                                                  '), {\n    at: './index.rsh:149:69:application',\n    fs: ['at ./index.rsh:148:7:application call to [unknown function] (defined at: ./index.rsh:148:11:function exp)'],\n    msg: 'ackProductReceived',\n    who: 'IBO'\n    });\n  \n  const txn12 = await (ctc.sendrecv(12, 1, stdlib.checkedBigNumberify('./index.rsh:151:5:dot', stdlib.UInt_max, 3), [ctc4, ctc0, ctc4, ctc0, ctc2], [v24, v26, v33, v111, v115], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [ctc2], true, true, false, (async (txn12) => {\n    const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n    \n    sim_r.prevSt = stdlib.digest(ctc5, [stdlib.checkedBigNumberify('./index.rsh:151:5:dot', stdlib.UInt_max, 11), v24, v26, v33, v111]);\n    sim_r.prevSt_noPrevTime = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:151:5:dot', stdlib.UInt_max, 11), v24, v26, v33]);\n    const [v117] = txn12.data;\n    const v120 = txn12.time;\n    const v116 = txn12.from;\n    \n    sim_r.txns.push({\n      amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n      kind: 'to',\n      tok: undefined\n      });\n    const v119 = stdlib.addressEq(v24, v116);\n    stdlib.assert(v119, {\n      at: './index.rsh:151:5:dot',\n      fs: [],\n      msg: 'sender correct',\n      who: 'IBO'\n      });\n    sim_r.nextSt = stdlib.digest(ctc5, [stdlib.checkedBigNumberify('./index.rsh:154:9:after expr stmt semicolon', stdlib.UInt_max, 12), v24, v26, v33, v120]);\n    sim_r.nextSt_noTime = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:154:9:after expr stmt semicolon', stdlib.UInt_max, 12), v24, v26, v33]);\n    sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:154:9:after expr stmt semicolon', stdlib.UInt_max, 2)]];\n    sim_r.isHalt = false;\n    \n    return sim_r;\n    })));\n  const [v117] = txn12.data;\n  const v120 = txn12.time;\n  const v116 = txn12.from;\n  ;\n  const v119 = stdlib.addressEq(v24, v116);\n  stdlib.assert(v119, {\n    at: './index.rsh:151:5:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'IBO'\n    });\n  const v124 = stdlib.protect(ctc2, await interact.shippedProduct('Customer                                                        ', 'final delivery                                                  '), {\n    at: './index.rsh:159:63:application',\n    fs: ['at ./index.rsh:158:7:application call to [unknown function] (defined at: ./index.rsh:158:11:function exp)'],\n    msg: 'shippedProduct',\n    who: 'IBO'\n    });\n  \n  const txn13 = await (ctc.sendrecv(13, 1, stdlib.checkedBigNumberify('./index.rsh:161:5:dot', stdlib.UInt_max, 3), [ctc4, ctc0, ctc4, ctc0, ctc2], [v24, v26, v33, v120, v124], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [ctc2], true, true, false, (async (txn13) => {\n    const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n    \n    sim_r.prevSt = stdlib.digest(ctc5, [stdlib.checkedBigNumberify('./index.rsh:161:5:dot', stdlib.UInt_max, 12), v24, v26, v33, v120]);\n    sim_r.prevSt_noPrevTime = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:161:5:dot', stdlib.UInt_max, 12), v24, v26, v33]);\n    const [v126] = txn13.data;\n    const v129 = txn13.time;\n    const v125 = txn13.from;\n    \n    sim_r.txns.push({\n      amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n      kind: 'to',\n      tok: undefined\n      });\n    const v128 = stdlib.addressEq(v24, v125);\n    stdlib.assert(v128, {\n      at: './index.rsh:161:5:dot',\n      fs: [],\n      msg: 'sender correct',\n      who: 'IBO'\n      });\n    sim_r.nextSt = stdlib.digest(ctc5, [stdlib.checkedBigNumberify('./index.rsh:164:9:after expr stmt semicolon', stdlib.UInt_max, 13), v24, v26, v33, v129]);\n    sim_r.nextSt_noTime = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:164:9:after expr stmt semicolon', stdlib.UInt_max, 13), v24, v26, v33]);\n    sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:164:9:after expr stmt semicolon', stdlib.UInt_max, 1)]];\n    sim_r.isHalt = false;\n    \n    return sim_r;\n    })));\n  const [v126] = txn13.data;\n  const v129 = txn13.time;\n  const v125 = txn13.from;\n  ;\n  const v128 = stdlib.addressEq(v24, v125);\n  stdlib.assert(v128, {\n    at: './index.rsh:161:5:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'IBO'\n    });\n  const txn14 = await (ctc.recv(14, 1, [ctc2], false, false));\n  const [v135] = txn14.data;\n  const v138 = txn14.time;\n  const v134 = txn14.from;\n  ;\n  const v137 = stdlib.addressEq(v33, v134);\n  stdlib.assert(v137, {\n    at: './index.rsh:169:6:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'IBO'\n    });\n  ;\n  return;\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  };\nexport async function Supplier(ctc, interact) {\n  if (ctc.sendrecv === undefined) {\n    return Promise.reject(new Error(`The backend for Supplier expects to receive a contract as its first argument.`));}\n  if (typeof(interact) !== 'object') {\n    return Promise.reject(new Error(`The backend for Supplier expects to receive an interact object as its second argument.`));}\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_Bytes(stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 64));\n  const ctc1 = stdlib.T_UInt;\n  const ctc2 = stdlib.T_Bool;\n  const ctc3 = stdlib.T_Tuple([ctc1]);\n  const ctc4 = stdlib.T_Address;\n  const ctc5 = stdlib.T_Tuple([ctc1, ctc4, ctc1, ctc4, ctc1]);\n  const ctc6 = stdlib.T_Tuple([ctc1, ctc4, ctc1, ctc4]);\n  const ctc7 = stdlib.T_Tuple([ctc1, ctc4, ctc1, ctc4, ctc4, ctc1]);\n  const ctc8 = stdlib.T_Tuple([ctc1, ctc4, ctc1, ctc4, ctc4]);\n  \n  \n  const v19 = await ctc.creationTime();\n  const txn1 = await (ctc.recv(1, 2, [ctc0, ctc1], false, false));\n  const [v25, v26] = txn1.data;\n  const v28 = txn1.time;\n  const v24 = txn1.from;\n  ;\n  const txn2 = await (ctc.recv(2, 1, [ctc2], false, false));\n  const [v34] = txn2.data;\n  const v36 = txn2.time;\n  const v33 = txn2.from;\n  ;\n  const txn3 = await (ctc.recv(3, 0, [], false, false));\n  const [] = txn3.data;\n  const v41 = txn3.time;\n  const v37 = txn3.from;\n  ;\n  const v40 = stdlib.addressEq(v33, v37);\n  stdlib.assert(v40, {\n    at: './index.rsh:60:4:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Supplier'\n    });\n  const txn4 = await (ctc.recv(4, 1, [ctc2], false, false));\n  const [v47] = txn4.data;\n  const v50 = txn4.time;\n  const v46 = txn4.from;\n  ;\n  const v49 = stdlib.addressEq(v24, v46);\n  stdlib.assert(v49, {\n    at: './index.rsh:70:5:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Supplier'\n    });\n  const v54 = stdlib.protect(ctc2, await interact.ackCADreceived(v25), {\n    at: './index.rsh:78:52:application',\n    fs: ['at ./index.rsh:77:7:application call to [unknown function] (defined at: ./index.rsh:77:11:function exp)'],\n    msg: 'ackCADreceived',\n    who: 'Supplier'\n    });\n  \n  const txn5 = await (ctc.sendrecv(5, 1, stdlib.checkedBigNumberify('./index.rsh:80:5:dot', stdlib.UInt_max, 3), [ctc4, ctc1, ctc4, ctc1, ctc2], [v24, v26, v33, v50, v54], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [ctc2], true, true, false, (async (txn5) => {\n    const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n    \n    sim_r.prevSt = stdlib.digest(ctc5, [stdlib.checkedBigNumberify('./index.rsh:80:5:dot', stdlib.UInt_max, 4), v24, v26, v33, v50]);\n    sim_r.prevSt_noPrevTime = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:80:5:dot', stdlib.UInt_max, 4), v24, v26, v33]);\n    const [v56] = txn5.data;\n    const v58 = txn5.time;\n    const v55 = txn5.from;\n    \n    sim_r.txns.push({\n      amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n      kind: 'to',\n      tok: undefined\n      });\n    sim_r.nextSt = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:83:9:after expr stmt semicolon', stdlib.UInt_max, 5), v24, v26, v33, v55, v58]);\n    sim_r.nextSt_noTime = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:83:9:after expr stmt semicolon', stdlib.UInt_max, 5), v24, v26, v33, v55]);\n    sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:83:9:after expr stmt semicolon', stdlib.UInt_max, 9)]];\n    sim_r.isHalt = false;\n    \n    return sim_r;\n    })));\n  const [v56] = txn5.data;\n  const v58 = txn5.time;\n  const v55 = txn5.from;\n  ;\n  const v62 = stdlib.protect(ctc2, await interact.shippedProduct('IBO                                                             ', 'product delivery                                                '), {\n    at: './index.rsh:87:60:application',\n    fs: ['at ./index.rsh:86:7:application call to [unknown function] (defined at: ./index.rsh:86:11:function exp)'],\n    msg: 'shippedProduct',\n    who: 'Supplier'\n    });\n  \n  const txn6 = await (ctc.sendrecv(6, 1, stdlib.checkedBigNumberify('./index.rsh:89:5:dot', stdlib.UInt_max, 4), [ctc4, ctc1, ctc4, ctc4, ctc1, ctc2], [v24, v26, v33, v55, v58, v62], [stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0), []], [ctc2], true, true, false, (async (txn6) => {\n    const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n    \n    sim_r.prevSt = stdlib.digest(ctc7, [stdlib.checkedBigNumberify('./index.rsh:89:5:dot', stdlib.UInt_max, 5), v24, v26, v33, v55, v58]);\n    sim_r.prevSt_noPrevTime = stdlib.digest(ctc8, [stdlib.checkedBigNumberify('./index.rsh:89:5:dot', stdlib.UInt_max, 5), v24, v26, v33, v55]);\n    const [v64] = txn6.data;\n    const v67 = txn6.time;\n    const v63 = txn6.from;\n    \n    sim_r.txns.push({\n      amt: stdlib.checkedBigNumberify('./index.rsh:decimal', stdlib.UInt_max, 0),\n      kind: 'to',\n      tok: undefined\n      });\n    const v66 = stdlib.addressEq(v55, v63);\n    stdlib.assert(v66, {\n      at: './index.rsh:89:5:dot',\n      fs: [],\n      msg: 'sender correct',\n      who: 'Supplier'\n      });\n    sim_r.nextSt = stdlib.digest(ctc5, [stdlib.checkedBigNumberify('./index.rsh:92:9:after expr stmt semicolon', stdlib.UInt_max, 6), v24, v26, v33, v67]);\n    sim_r.nextSt_noTime = stdlib.digest(ctc6, [stdlib.checkedBigNumberify('./index.rsh:92:9:after expr stmt semicolon', stdlib.UInt_max, 6), v24, v26, v33]);\n    sim_r.view = [ctc3, [stdlib.checkedBigNumberify('./index.rsh:92:9:after expr stmt semicolon', stdlib.UInt_max, 8)]];\n    sim_r.isHalt = false;\n    \n    return sim_r;\n    })));\n  const [v64] = txn6.data;\n  const v67 = txn6.time;\n  const v63 = txn6.from;\n  ;\n  const v66 = stdlib.addressEq(v55, v63);\n  stdlib.assert(v66, {\n    at: './index.rsh:89:5:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Supplier'\n    });\n  const txn7 = await (ctc.recv(7, 1, [ctc2], false, false));\n  const [v73] = txn7.data;\n  const v76 = txn7.time;\n  const v72 = txn7.from;\n  ;\n  const v75 = stdlib.addressEq(v24, v72);\n  stdlib.assert(v75, {\n    at: './index.rsh:100:5:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Supplier'\n    });\n  const txn8 = await (ctc.recv(8, 1, [ctc2], false, false));\n  const [v82] = txn8.data;\n  const v85 = txn8.time;\n  const v81 = txn8.from;\n  ;\n  const v84 = stdlib.addressEq(v24, v81);\n  stdlib.assert(v84, {\n    at: './index.rsh:110:5:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Supplier'\n    });\n  const txn9 = await (ctc.recv(9, 1, [ctc2], false, false));\n  const [v91] = txn9.data;\n  const v93 = txn9.time;\n  const v90 = txn9.from;\n  ;\n  const txn10 = await (ctc.recv(10, 1, [ctc2], false, false));\n  const [v99] = txn10.data;\n  const v102 = txn10.time;\n  const v98 = txn10.from;\n  ;\n  const v101 = stdlib.addressEq(v90, v98);\n  stdlib.assert(v101, {\n    at: './index.rsh:129:6:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Supplier'\n    });\n  const txn11 = await (ctc.recv(11, 1, [ctc2], false, false));\n  const [v108] = txn11.data;\n  const v111 = txn11.time;\n  const v107 = txn11.from;\n  ;\n  const v110 = stdlib.addressEq(v90, v107);\n  stdlib.assert(v110, {\n    at: './index.rsh:140:6:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Supplier'\n    });\n  const txn12 = await (ctc.recv(12, 1, [ctc2], false, false));\n  const [v117] = txn12.data;\n  const v120 = txn12.time;\n  const v116 = txn12.from;\n  ;\n  const v119 = stdlib.addressEq(v24, v116);\n  stdlib.assert(v119, {\n    at: './index.rsh:151:5:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Supplier'\n    });\n  const txn13 = await (ctc.recv(13, 1, [ctc2], false, false));\n  const [v126] = txn13.data;\n  const v129 = txn13.time;\n  const v125 = txn13.from;\n  ;\n  const v128 = stdlib.addressEq(v24, v125);\n  stdlib.assert(v128, {\n    at: './index.rsh:161:5:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Supplier'\n    });\n  const txn14 = await (ctc.recv(14, 1, [ctc2], false, false));\n  const [v135] = txn14.data;\n  const v138 = txn14.time;\n  const v134 = txn14.from;\n  ;\n  const v137 = stdlib.addressEq(v33, v134);\n  stdlib.assert(v137, {\n    at: './index.rsh:169:6:dot',\n    fs: [],\n    msg: 'sender correct',\n    who: 'Supplier'\n    });\n  ;\n  return;\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  };\n\nconst _ALGO = {\n  appApproval: `#pragma version 3\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\ntxn OnCompletion\nint OptIn\n==\nbz normal\nglobal GroupSize\nint 1\n==\nassert\nb done\nnormal:\ngtxna 0 ApplicationArgs 8\nstore 5\n// Check that everyone's here\nglobal GroupSize\nint 3\n>=\nassert\n// Check txnAppl (us)\ntxn GroupIndex\nint 0\n==\nassert\n// Check txnFromHandler\nint 0\ngtxn 2 Sender\nbyte \"{{m1}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m2}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m3}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m4}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m5}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m6}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m7}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m8}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m9}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m10}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m11}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m12}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m13}}\"\n==\n||\ngtxn 2 Sender\nbyte \"{{m14}}\"\n==\n||\nassert\nbyte base64(cw==)\napp_global_get\ngtxna 0 ApplicationArgs 0\n==\nassert\nbyte base64(cw==)\ngtxna 0 ApplicationArgs 1\napp_global_put\nbyte base64(bA==)\napp_global_get\ngtxna 0 ApplicationArgs 5\nbtoi\n==\nassert\nbyte base64(bA==)\nglobal Round\napp_global_put\nint 0\ntxn NumAccounts\n==\nassert\nbyte base64(djA=)\ngtxna 0 ApplicationArgs 2\nsubstring 0 8\napp_global_put\nbyte base64(aA==)\ngtxna 0 ApplicationArgs 3\nbtoi\napp_global_put\nbyte base64(aA==)\napp_global_get\nbnz halted\ntxn OnCompletion\nint NoOp\n==\nassert\nb done\nhalted:\ntxn OnCompletion\nint DeleteApplication\n==\nassert\ndone:\nint 1\nreturn\n`,\n  appApproval0: `#pragma version 3\n// Check that we're an App\ntxn TypeEnum\nint appl\n==\nassert\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\ntxn Sender\nbyte \"{{Deployer}}\"\n==\nassert\ntxn ApplicationID\nbz init\nglobal GroupSize\nint 2\n==\nassert\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Amount\nint 100000\n==\nassert\n// We don't check the receiver, because we don't know it yet, because the escrow account embeds our id\n// We don't check the sender, because we don't care... anyone is allowed to fund it. We'll give it back to the deployer, though.\ntxn OnCompletion\nint UpdateApplication\n==\nassert\nbyte base64(cw==)\n// compute state in HM_Set 0\nint 0\nitob\nkeccak256\napp_global_put\nbyte base64(bA==)\nglobal Round\napp_global_put\nbyte base64(djA=)\nbyte base64()\napp_global_put\nbyte base64(aA==)\nint 0\napp_global_put\nb done\ninit:\nglobal GroupSize\nint 1\n==\nassert\ntxn OnCompletion\nint NoOp\n==\nassert\ndone:\nint 1\nreturn\n`,\n  appClear: `#pragma version 3\n// We're alone\nglobal GroupSize\nint 1\n==\nassert\n// We're halted\nbyte base64(aA==)\napp_global_get\nint 1\n==\nassert\ndone:\nint 1\nreturn\n`,\n  ctc: `#pragma version 3\n// Check size\nglobal GroupSize\nint 3\n>=\nassert\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\n// Don't check anything else, because app does\n// Check us\ntxn TypeEnum\nint pay\n==\nint axfer\ndup2\n==\n||\nassert\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\ntxn GroupIndex\nint 3\n>=\nassert\ndone:\nint 1\nreturn\n`,\n  mapArgSize: 165,\n  mapDataKeys: 0,\n  mapDataSize: 0,\n  mapRecordSize: 33,\n  stepargs: [null, {\n    count: 9,\n    size: 326\n    }, {\n    count: 9,\n    size: 295\n    }, {\n    count: 9,\n    size: 326\n    }, {\n    count: 9,\n    size: 327\n    }, {\n    count: 9,\n    size: 327\n    }, {\n    count: 9,\n    size: 359\n    }, {\n    count: 9,\n    size: 327\n    }, {\n    count: 9,\n    size: 327\n    }, {\n    count: 9,\n    size: 327\n    }, {\n    count: 9,\n    size: 359\n    }, {\n    count: 9,\n    size: 359\n    }, {\n    count: 9,\n    size: 327\n    }, {\n    count: 9,\n    size: 327\n    }, {\n    count: 9,\n    size: 327\n    }],\n  steps: [null, `#pragma version 3\ngtxna 0 ApplicationArgs 1\nstore 0\ngtxna 0 ApplicationArgs 2\nstore 1\ngtxna 0 ApplicationArgs 3\nstore 2\ngtxna 0 ApplicationArgs 4\nstore 3\ngtxna 0 ApplicationArgs 5\nstore 4\ngtxna 0 ApplicationArgs 8\nstore 5\nint 0\nstore 6\ngtxna 0 ApplicationArgs 7\ndup\nsubstring 0 64\nstore 255\ndup\nsubstring 64 72\nbtoi\nstore 254\npop\n// Handler 1\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 9\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 0\nint 0\nitob\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:46:5:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\nload 3\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\n// check view bs\nint 13\nitob\nload 1\n==\nassert\n// compute state in HM_Set 1\nint 1\nitob\ngtxn 0 Sender\nconcat\nload 254\nitob\nconcat\nkeccak256\nload 0\n==\nassert\nload 2\nbtoi\nint 0\n==\nassert\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\nload 3\nbtoi\nint 0\n==\nassert\n// Check time limits\ncheckAccts:\ngtxn 0 NumAccounts\nload 6\n==\nassert\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 1\nstore 0\ngtxna 0 ApplicationArgs 2\nstore 1\ngtxna 0 ApplicationArgs 3\nstore 2\ngtxna 0 ApplicationArgs 4\nstore 3\ngtxna 0 ApplicationArgs 5\nstore 4\ngtxna 0 ApplicationArgs 8\nstore 5\nint 0\nstore 6\ngtxna 0 ApplicationArgs 6\ndup\nsubstring 0 32\nstore 255\ndup\nsubstring 32 40\nbtoi\nstore 254\npop\ngtxna 0 ApplicationArgs 7\ndup\nsubstring 0 1\nbtoi\nstore 253\npop\n// Handler 2\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 9\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 1\nint 1\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:56:4:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\nload 3\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\n// check view bs\nint 12\nitob\nload 1\n==\nassert\n// compute state in HM_Set 2\nint 2\nitob\nload 255\nconcat\nload 254\nitob\nconcat\ngtxn 0 Sender\nconcat\nkeccak256\nload 0\n==\nassert\nload 2\nbtoi\nint 0\n==\nassert\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\nload 3\nbtoi\nint 0\n==\nassert\n// Check time limits\ncheckAccts:\ngtxn 0 NumAccounts\nload 6\n==\nassert\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 1\nstore 0\ngtxna 0 ApplicationArgs 2\nstore 1\ngtxna 0 ApplicationArgs 3\nstore 2\ngtxna 0 ApplicationArgs 4\nstore 3\ngtxna 0 ApplicationArgs 5\nstore 4\ngtxna 0 ApplicationArgs 8\nstore 5\nint 0\nstore 6\ngtxna 0 ApplicationArgs 6\ndup\nsubstring 0 32\nstore 255\ndup\nsubstring 32 40\nbtoi\nstore 254\ndup\nsubstring 40 72\nstore 253\npop\n// Handler 3\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 9\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 2\nint 2\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:60:4:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\nload 3\nbtoi\n-\nload 254\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\n// Just \"sender correct\"\n// \"./index.rsh:60:4:dot\"\n// \"[]\"\nload 253\ngtxn 0 Sender\n==\nassert\n// check view bs\nint 11\nitob\nload 1\n==\nassert\n// compute state in HM_Set 3\nint 3\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nconcat\nkeccak256\nload 0\n==\nassert\nload 2\nbtoi\nint 0\n==\nassert\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\nload 3\nbtoi\nint 0\n==\nassert\n// Check time limits\ncheckAccts:\ngtxn 0 NumAccounts\nload 6\n==\nassert\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 1\nstore 0\ngtxna 0 ApplicationArgs 2\nstore 1\ngtxna 0 ApplicationArgs 3\nstore 2\ngtxna 0 ApplicationArgs 4\nstore 3\ngtxna 0 ApplicationArgs 5\nstore 4\ngtxna 0 ApplicationArgs 8\nstore 5\nint 0\nstore 6\ngtxna 0 ApplicationArgs 6\ndup\nsubstring 0 32\nstore 255\ndup\nsubstring 32 40\nbtoi\nstore 254\ndup\nsubstring 40 72\nstore 253\npop\ngtxna 0 ApplicationArgs 7\ndup\nsubstring 0 1\nbtoi\nstore 252\npop\n// Handler 4\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 9\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 3\nint 3\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:70:5:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\nload 3\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\n// Just \"sender correct\"\n// \"./index.rsh:70:5:dot\"\n// \"[]\"\nload 255\ngtxn 0 Sender\n==\nassert\n// check view bs\nint 10\nitob\nload 1\n==\nassert\n// compute state in HM_Set 4\nint 4\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nconcat\nkeccak256\nload 0\n==\nassert\nload 2\nbtoi\nint 0\n==\nassert\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\nload 3\nbtoi\nint 0\n==\nassert\n// Check time limits\ncheckAccts:\ngtxn 0 NumAccounts\nload 6\n==\nassert\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 1\nstore 0\ngtxna 0 ApplicationArgs 2\nstore 1\ngtxna 0 ApplicationArgs 3\nstore 2\ngtxna 0 ApplicationArgs 4\nstore 3\ngtxna 0 ApplicationArgs 5\nstore 4\ngtxna 0 ApplicationArgs 8\nstore 5\nint 0\nstore 6\ngtxna 0 ApplicationArgs 6\ndup\nsubstring 0 32\nstore 255\ndup\nsubstring 32 40\nbtoi\nstore 254\ndup\nsubstring 40 72\nstore 253\npop\ngtxna 0 ApplicationArgs 7\ndup\nsubstring 0 1\nbtoi\nstore 252\npop\n// Handler 5\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 9\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 4\nint 4\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:80:5:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\nload 3\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\n// check view bs\nint 9\nitob\nload 1\n==\nassert\n// compute state in HM_Set 5\nint 5\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nconcat\ngtxn 0 Sender\nconcat\nkeccak256\nload 0\n==\nassert\nload 2\nbtoi\nint 0\n==\nassert\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\nload 3\nbtoi\nint 0\n==\nassert\n// Check time limits\ncheckAccts:\ngtxn 0 NumAccounts\nload 6\n==\nassert\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 1\nstore 0\ngtxna 0 ApplicationArgs 2\nstore 1\ngtxna 0 ApplicationArgs 3\nstore 2\ngtxna 0 ApplicationArgs 4\nstore 3\ngtxna 0 ApplicationArgs 5\nstore 4\ngtxna 0 ApplicationArgs 8\nstore 5\nint 0\nstore 6\ngtxna 0 ApplicationArgs 6\ndup\nsubstring 0 32\nstore 255\ndup\nsubstring 32 40\nbtoi\nstore 254\ndup\nsubstring 40 72\nstore 253\ndup\nsubstring 72 104\nstore 252\npop\ngtxna 0 ApplicationArgs 7\ndup\nsubstring 0 1\nbtoi\nstore 251\npop\n// Handler 6\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 9\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 5\nint 5\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nconcat\nload 252\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:89:5:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\nload 3\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\n// Just \"sender correct\"\n// \"./index.rsh:89:5:dot\"\n// \"[]\"\nload 252\ngtxn 0 Sender\n==\nassert\n// check view bs\nint 8\nitob\nload 1\n==\nassert\n// compute state in HM_Set 6\nint 6\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nconcat\nkeccak256\nload 0\n==\nassert\nload 2\nbtoi\nint 0\n==\nassert\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\nload 3\nbtoi\nint 0\n==\nassert\n// Check time limits\ncheckAccts:\ngtxn 0 NumAccounts\nload 6\n==\nassert\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 1\nstore 0\ngtxna 0 ApplicationArgs 2\nstore 1\ngtxna 0 ApplicationArgs 3\nstore 2\ngtxna 0 ApplicationArgs 4\nstore 3\ngtxna 0 ApplicationArgs 5\nstore 4\ngtxna 0 ApplicationArgs 8\nstore 5\nint 0\nstore 6\ngtxna 0 ApplicationArgs 6\ndup\nsubstring 0 32\nstore 255\ndup\nsubstring 32 40\nbtoi\nstore 254\ndup\nsubstring 40 72\nstore 253\npop\ngtxna 0 ApplicationArgs 7\ndup\nsubstring 0 1\nbtoi\nstore 252\npop\n// Handler 7\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 9\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 6\nint 6\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:100:5:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\nload 3\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\n// Just \"sender correct\"\n// \"./index.rsh:100:5:dot\"\n// \"[]\"\nload 255\ngtxn 0 Sender\n==\nassert\n// check view bs\nint 7\nitob\nload 1\n==\nassert\n// compute state in HM_Set 7\nint 7\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nconcat\nkeccak256\nload 0\n==\nassert\nload 2\nbtoi\nint 0\n==\nassert\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\nload 3\nbtoi\nint 0\n==\nassert\n// Check time limits\ncheckAccts:\ngtxn 0 NumAccounts\nload 6\n==\nassert\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 1\nstore 0\ngtxna 0 ApplicationArgs 2\nstore 1\ngtxna 0 ApplicationArgs 3\nstore 2\ngtxna 0 ApplicationArgs 4\nstore 3\ngtxna 0 ApplicationArgs 5\nstore 4\ngtxna 0 ApplicationArgs 8\nstore 5\nint 0\nstore 6\ngtxna 0 ApplicationArgs 6\ndup\nsubstring 0 32\nstore 255\ndup\nsubstring 32 40\nbtoi\nstore 254\ndup\nsubstring 40 72\nstore 253\npop\ngtxna 0 ApplicationArgs 7\ndup\nsubstring 0 1\nbtoi\nstore 252\npop\n// Handler 8\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 9\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 7\nint 7\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:110:5:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\nload 3\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\n// Just \"sender correct\"\n// \"./index.rsh:110:5:dot\"\n// \"[]\"\nload 255\ngtxn 0 Sender\n==\nassert\n// check view bs\nint 6\nitob\nload 1\n==\nassert\n// compute state in HM_Set 8\nint 8\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nconcat\nkeccak256\nload 0\n==\nassert\nload 2\nbtoi\nint 0\n==\nassert\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\nload 3\nbtoi\nint 0\n==\nassert\n// Check time limits\ncheckAccts:\ngtxn 0 NumAccounts\nload 6\n==\nassert\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 1\nstore 0\ngtxna 0 ApplicationArgs 2\nstore 1\ngtxna 0 ApplicationArgs 3\nstore 2\ngtxna 0 ApplicationArgs 4\nstore 3\ngtxna 0 ApplicationArgs 5\nstore 4\ngtxna 0 ApplicationArgs 8\nstore 5\nint 0\nstore 6\ngtxna 0 ApplicationArgs 6\ndup\nsubstring 0 32\nstore 255\ndup\nsubstring 32 40\nbtoi\nstore 254\ndup\nsubstring 40 72\nstore 253\npop\ngtxna 0 ApplicationArgs 7\ndup\nsubstring 0 1\nbtoi\nstore 252\npop\n// Handler 9\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 9\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 8\nint 8\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:119:8:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\nload 3\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\n// check view bs\nint 5\nitob\nload 1\n==\nassert\n// compute state in HM_Set 9\nint 9\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nconcat\ngtxn 0 Sender\nconcat\nkeccak256\nload 0\n==\nassert\nload 2\nbtoi\nint 0\n==\nassert\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\nload 3\nbtoi\nint 0\n==\nassert\n// Check time limits\ncheckAccts:\ngtxn 0 NumAccounts\nload 6\n==\nassert\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 1\nstore 0\ngtxna 0 ApplicationArgs 2\nstore 1\ngtxna 0 ApplicationArgs 3\nstore 2\ngtxna 0 ApplicationArgs 4\nstore 3\ngtxna 0 ApplicationArgs 5\nstore 4\ngtxna 0 ApplicationArgs 8\nstore 5\nint 0\nstore 6\ngtxna 0 ApplicationArgs 6\ndup\nsubstring 0 32\nstore 255\ndup\nsubstring 32 40\nbtoi\nstore 254\ndup\nsubstring 40 72\nstore 253\ndup\nsubstring 72 104\nstore 252\npop\ngtxna 0 ApplicationArgs 7\ndup\nsubstring 0 1\nbtoi\nstore 251\npop\n// Handler 10\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 9\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 9\nint 9\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nconcat\nload 252\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:129:6:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\nload 3\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\n// Just \"sender correct\"\n// \"./index.rsh:129:6:dot\"\n// \"[]\"\nload 252\ngtxn 0 Sender\n==\nassert\n// check view bs\nint 4\nitob\nload 1\n==\nassert\n// compute state in HM_Set 10\nint 10\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nconcat\nload 252\nconcat\nkeccak256\nload 0\n==\nassert\nload 2\nbtoi\nint 0\n==\nassert\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\nload 3\nbtoi\nint 0\n==\nassert\n// Check time limits\ncheckAccts:\ngtxn 0 NumAccounts\nload 6\n==\nassert\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 1\nstore 0\ngtxna 0 ApplicationArgs 2\nstore 1\ngtxna 0 ApplicationArgs 3\nstore 2\ngtxna 0 ApplicationArgs 4\nstore 3\ngtxna 0 ApplicationArgs 5\nstore 4\ngtxna 0 ApplicationArgs 8\nstore 5\nint 0\nstore 6\ngtxna 0 ApplicationArgs 6\ndup\nsubstring 0 32\nstore 255\ndup\nsubstring 32 40\nbtoi\nstore 254\ndup\nsubstring 40 72\nstore 253\ndup\nsubstring 72 104\nstore 252\npop\ngtxna 0 ApplicationArgs 7\ndup\nsubstring 0 1\nbtoi\nstore 251\npop\n// Handler 11\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 9\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 10\nint 10\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nconcat\nload 252\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:140:6:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\nload 3\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\n// Just \"sender correct\"\n// \"./index.rsh:140:6:dot\"\n// \"[]\"\nload 252\ngtxn 0 Sender\n==\nassert\n// check view bs\nint 3\nitob\nload 1\n==\nassert\n// compute state in HM_Set 11\nint 11\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nconcat\nkeccak256\nload 0\n==\nassert\nload 2\nbtoi\nint 0\n==\nassert\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\nload 3\nbtoi\nint 0\n==\nassert\n// Check time limits\ncheckAccts:\ngtxn 0 NumAccounts\nload 6\n==\nassert\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 1\nstore 0\ngtxna 0 ApplicationArgs 2\nstore 1\ngtxna 0 ApplicationArgs 3\nstore 2\ngtxna 0 ApplicationArgs 4\nstore 3\ngtxna 0 ApplicationArgs 5\nstore 4\ngtxna 0 ApplicationArgs 8\nstore 5\nint 0\nstore 6\ngtxna 0 ApplicationArgs 6\ndup\nsubstring 0 32\nstore 255\ndup\nsubstring 32 40\nbtoi\nstore 254\ndup\nsubstring 40 72\nstore 253\npop\ngtxna 0 ApplicationArgs 7\ndup\nsubstring 0 1\nbtoi\nstore 252\npop\n// Handler 12\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 9\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 11\nint 11\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:151:5:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\nload 3\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\n// Just \"sender correct\"\n// \"./index.rsh:151:5:dot\"\n// \"[]\"\nload 255\ngtxn 0 Sender\n==\nassert\n// check view bs\nint 2\nitob\nload 1\n==\nassert\n// compute state in HM_Set 12\nint 12\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nconcat\nkeccak256\nload 0\n==\nassert\nload 2\nbtoi\nint 0\n==\nassert\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\nload 3\nbtoi\nint 0\n==\nassert\n// Check time limits\ncheckAccts:\ngtxn 0 NumAccounts\nload 6\n==\nassert\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 1\nstore 0\ngtxna 0 ApplicationArgs 2\nstore 1\ngtxna 0 ApplicationArgs 3\nstore 2\ngtxna 0 ApplicationArgs 4\nstore 3\ngtxna 0 ApplicationArgs 5\nstore 4\ngtxna 0 ApplicationArgs 8\nstore 5\nint 0\nstore 6\ngtxna 0 ApplicationArgs 6\ndup\nsubstring 0 32\nstore 255\ndup\nsubstring 32 40\nbtoi\nstore 254\ndup\nsubstring 40 72\nstore 253\npop\ngtxna 0 ApplicationArgs 7\ndup\nsubstring 0 1\nbtoi\nstore 252\npop\n// Handler 13\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 9\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 12\nint 12\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:161:5:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\nload 3\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\n// Just \"sender correct\"\n// \"./index.rsh:161:5:dot\"\n// \"[]\"\nload 255\ngtxn 0 Sender\n==\nassert\n// check view bs\nint 1\nitob\nload 1\n==\nassert\n// compute state in HM_Set 13\nint 13\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nconcat\nkeccak256\nload 0\n==\nassert\nload 2\nbtoi\nint 0\n==\nassert\n// Check GroupSize\nglobal GroupSize\nint 4\n==\nassert\nload 3\nbtoi\nint 0\n==\nassert\n// Check time limits\ncheckAccts:\ngtxn 0 NumAccounts\nload 6\n==\nassert\ndone:\nint 1\nreturn\n`, `#pragma version 3\ngtxna 0 ApplicationArgs 1\nstore 0\ngtxna 0 ApplicationArgs 2\nstore 1\ngtxna 0 ApplicationArgs 3\nstore 2\ngtxna 0 ApplicationArgs 4\nstore 3\ngtxna 0 ApplicationArgs 5\nstore 4\ngtxna 0 ApplicationArgs 8\nstore 5\nint 0\nstore 6\ngtxna 0 ApplicationArgs 6\ndup\nsubstring 0 32\nstore 255\ndup\nsubstring 32 40\nbtoi\nstore 254\ndup\nsubstring 40 72\nstore 253\npop\ngtxna 0 ApplicationArgs 7\ndup\nsubstring 0 1\nbtoi\nstore 252\npop\n// Handler 14\n// Check txnAppl\ngtxn 0 TypeEnum\nint appl\n==\nassert\ngtxn 0 ApplicationID\nbyte \"{{ApplicationID}}\"\nbtoi\n==\nassert\ngtxn 0 NumAppArgs\nint 9\n==\nassert\n// Check txnToHandler\ngtxn 1 TypeEnum\nint pay\n==\nassert\ngtxn 1 Receiver\ntxn Sender\n==\nassert\ngtxn 1 Amount\ngtxn 2 Fee\nint 100000\n+\n==\nassert\n// Check txnFromHandler (us)\ntxn GroupIndex\nint 2\n==\nassert\ntxn TypeEnum\nint pay\n==\nassert\ntxn Amount\nint 0\n==\nassert\ntxn Receiver\ngtxn 1 Sender\n==\nassert\n// compute state in HM_Check 13\nint 13\nitob\nload 255\nconcat\nload 254\nitob\nconcat\nload 253\nconcat\nkeccak256\ngtxna 0 ApplicationArgs 0\n==\nassert\ntxn CloseRemainderTo\ngtxn 1 Sender\n==\nassert\n// Run body\n// \"CheckPay\"\n// \"./index.rsh:169:6:dot\"\n// \"[]\"\ngtxn 3 TypeEnum\nint pay\n==\nassert\ngtxn 3 Receiver\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 3 Amount\nload 3\nbtoi\n==\nassert\n// We don't care who the sender is... this means that you can get other people to pay for you if you want.\n// Just \"sender correct\"\n// \"./index.rsh:169:6:dot\"\n// \"[]\"\nload 253\ngtxn 0 Sender\n==\nassert\ngtxn 4 TypeEnum\nint pay\n==\nassert\ngtxn 4 Receiver\nload 255\n==\nassert\ngtxn 4 Amount\nload 254\n==\nassert\ngtxn 4 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\nbyte base64(AAAAAAAAAAA=)\nload 1\n==\nassert\ngtxn 5 TypeEnum\nint pay\n==\nassert\n// We don't check the receiver\ngtxn 5 Amount\nint 0\n==\nassert\ngtxn 5 Sender\nbyte \"{{ContractAddr}}\"\n==\nassert\ngtxn 5 CloseRemainderTo\nbyte \"{{Deployer}}\"\n==\nassert\nload 2\nbtoi\nint 1\n==\nassert\n// Check GroupSize\nglobal GroupSize\nint 6\n==\nassert\nload 3\nbtoi\ngtxn 4 Fee\ngtxn 5 Fee\n+\n==\nassert\n// Check time limits\ncheckAccts:\ngtxn 0 NumAccounts\nload 6\n==\nassert\ndone:\nint 1\nreturn\n`],\n  unsupported: [],\n  version: 1,\n  viewKeys: 1,\n  viewSize: 8\n  };\nconst _ETH = {\n  ABI: `[\n  {\n    \"inputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"msg\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReachError\",\n    \"type\": \"error\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [],\n    \"name\": \"e0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v19\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T0\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint8[64]\",\n                \"name\": \"v25\",\n                \"type\": \"uint8[64]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v26\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T3\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T4\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v24\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v26\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v33\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v90\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v93\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T25\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"bool\",\n                \"name\": \"v99\",\n                \"type\": \"bool\"\n              }\n            ],\n            \"internalType\": \"struct T29\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T30\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e10\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v24\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v26\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v33\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v90\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v102\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T28\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"bool\",\n                \"name\": \"v108\",\n                \"type\": \"bool\"\n              }\n            ],\n            \"internalType\": \"struct T32\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T33\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e11\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v24\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v26\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v33\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v111\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T31\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"bool\",\n                \"name\": \"v117\",\n                \"type\": \"bool\"\n              }\n            ],\n            \"internalType\": \"struct T35\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T36\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e12\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v24\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v26\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v33\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v120\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T34\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"bool\",\n                \"name\": \"v126\",\n                \"type\": \"bool\"\n              }\n            ],\n            \"internalType\": \"struct T38\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T39\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e13\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v24\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v26\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v33\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v129\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T37\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"bool\",\n                \"name\": \"v135\",\n                \"type\": \"bool\"\n              }\n            ],\n            \"internalType\": \"struct T40\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T41\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e14\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v24\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v26\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v28\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T2\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"bool\",\n                \"name\": \"v34\",\n                \"type\": \"bool\"\n              }\n            ],\n            \"internalType\": \"struct T6\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T7\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e2\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v24\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v26\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v33\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v36\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T5\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T9\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e3\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v24\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v26\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v33\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v41\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T8\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"bool\",\n                \"name\": \"v47\",\n                \"type\": \"bool\"\n              }\n            ],\n            \"internalType\": \"struct T11\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T12\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e4\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v24\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v26\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v33\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v50\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T10\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"bool\",\n                \"name\": \"v56\",\n                \"type\": \"bool\"\n              }\n            ],\n            \"internalType\": \"struct T14\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T15\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e5\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v24\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v26\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v33\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v55\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v58\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T13\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"bool\",\n                \"name\": \"v64\",\n                \"type\": \"bool\"\n              }\n            ],\n            \"internalType\": \"struct T17\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T18\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e6\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v24\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v26\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v33\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v67\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T16\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"bool\",\n                \"name\": \"v73\",\n                \"type\": \"bool\"\n              }\n            ],\n            \"internalType\": \"struct T20\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T21\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e7\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v24\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v26\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v33\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v76\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T19\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"bool\",\n                \"name\": \"v82\",\n                \"type\": \"bool\"\n              }\n            ],\n            \"internalType\": \"struct T23\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T24\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e8\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v24\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v26\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v33\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v85\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T22\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"bool\",\n                \"name\": \"v91\",\n                \"type\": \"bool\"\n              }\n            ],\n            \"internalType\": \"struct T26\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T27\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"e9\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"Main_status\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint8[64]\",\n        \"name\": \"\",\n        \"type\": \"uint8[64]\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"Main_step\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v19\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T0\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint8[64]\",\n                \"name\": \"v25\",\n                \"type\": \"uint8[64]\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v26\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T3\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T4\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m1\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v24\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v26\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v33\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v90\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v93\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T25\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"bool\",\n                \"name\": \"v99\",\n                \"type\": \"bool\"\n              }\n            ],\n            \"internalType\": \"struct T29\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T30\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m10\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v24\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v26\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v33\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v90\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v102\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T28\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"bool\",\n                \"name\": \"v108\",\n                \"type\": \"bool\"\n              }\n            ],\n            \"internalType\": \"struct T32\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T33\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m11\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v24\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v26\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v33\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v111\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T31\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"bool\",\n                \"name\": \"v117\",\n                \"type\": \"bool\"\n              }\n            ],\n            \"internalType\": \"struct T35\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T36\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m12\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v24\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v26\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v33\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v120\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T34\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"bool\",\n                \"name\": \"v126\",\n                \"type\": \"bool\"\n              }\n            ],\n            \"internalType\": \"struct T38\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T39\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m13\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v24\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v26\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v33\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v129\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T37\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"bool\",\n                \"name\": \"v135\",\n                \"type\": \"bool\"\n              }\n            ],\n            \"internalType\": \"struct T40\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T41\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m14\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v24\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v26\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v28\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T2\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"bool\",\n                \"name\": \"v34\",\n                \"type\": \"bool\"\n              }\n            ],\n            \"internalType\": \"struct T6\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T7\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m2\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v24\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v26\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v33\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v36\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T5\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T9\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m3\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v24\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v26\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v33\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v41\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T8\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"bool\",\n                \"name\": \"v47\",\n                \"type\": \"bool\"\n              }\n            ],\n            \"internalType\": \"struct T11\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T12\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m4\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v24\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v26\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v33\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v50\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T10\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"bool\",\n                \"name\": \"v56\",\n                \"type\": \"bool\"\n              }\n            ],\n            \"internalType\": \"struct T14\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T15\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m5\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v24\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v26\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v33\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v55\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v58\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T13\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"bool\",\n                \"name\": \"v64\",\n                \"type\": \"bool\"\n              }\n            ],\n            \"internalType\": \"struct T17\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T18\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m6\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v24\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v26\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v33\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v67\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T16\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"bool\",\n                \"name\": \"v73\",\n                \"type\": \"bool\"\n              }\n            ],\n            \"internalType\": \"struct T20\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T21\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m7\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v24\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v26\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v33\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v76\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T19\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"bool\",\n                \"name\": \"v82\",\n                \"type\": \"bool\"\n              }\n            ],\n            \"internalType\": \"struct T23\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T24\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m8\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"components\": [\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v24\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v26\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"address payable\",\n                \"name\": \"v33\",\n                \"type\": \"address\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v85\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T22\",\n            \"name\": \"svs\",\n            \"type\": \"tuple\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"bool\",\n                \"name\": \"v91\",\n                \"type\": \"bool\"\n              }\n            ],\n            \"internalType\": \"struct T26\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T27\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"m9\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"stateMutability\": \"payable\",\n    \"type\": \"receive\"\n  }\n]`,\n  Bytecode: ``,\n  BytecodeLen: 18758,\n  Which: `oD`,\n  deployMode: `DM_constructor`,\n  views: {\n    Main: {\n      status: `Main_status`,\n      step: `Main_step`\n      }\n    }\n  };\n\nexport const _Connectors = {\n  ALGO: _ALGO,\n  ETH: _ETH\n  };\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as AppViews from './views/AppViews';\nimport * as IBOViews from './views/IBOViews';\nimport * as SupplierViews from './views/SupplierViews';\nimport * as CertViews from './views/CertViews';\nimport * as CustomerViews from './views/CustomerViews';\nimport * as backend from './build/index2.main.mjs';\nimport * as reach from '@reach-sh/stdlib/ALGO';\nreach.setSignStrategy('mnemonic');\nreach.setProviderByName('TestNet');\n\nconst { standardUnit } = reach;\nconst defaultFundAmtStandard = '10';\n\nfunction renderDOM() {\n    ReactDOM.render(\n        <React.StrictMode><App /></React.StrictMode>,\n        document.getElementById('root')\n    );\n}\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { mode: 'ConnectAccount' }\n    }\n    async componentDidMount() { // from mode: ConnectAccount\n        // connect algosigner\n\n        const acc = await reach.getDefaultAccount();\n        const addr = await acc.getAddress();\n        const balAtomic = await reach.balanceOf(acc);\n        const bal = reach.formatCurrency(balAtomic, 4);\n        this.setState({ mode: 'SelectRole', acc, addr, bal });\n    \n    }\n    fundAccount(fundAmountStandard) { // from mode: FundAccount\n        const { faucet, acc } = this.state;\n        const amountAtomic = reach.parseCurrency(fundAmountStandard || defaultFundAmtStandard);\n        reach.transfer(faucet, acc, amountAtomic);\n        this.setState({ mode: 'SelectRole' });\n    }\n    skipFundAccount() { this.setState({ mode: 'SelectRole' }); } // from mode: FundAccount\n    selectRole(role) { this.setState({ mode: 'RunRole', role }); } // from mode: SelectRole\n    selectSupplier() { this.selectRole(<Supplier acc={this.state.acc} />); }\n    selectIBO() { this.selectRole(<IBO acc={this.state.acc} />); }\n    selectCert() { this.selectRole(<Cert acc={this.state.acc} />); }\n    selectCustomer() { this.selectRole(<Customer acc={this.state.acc} />); }\n    render() {\n        const { mode, role } = this.state;\n        const parent = this;\n        let app = null;\n        if (mode === 'ConnectAccount') {\n            app = <AppViews.ConnectAccount />\n        } else if (mode === 'SelectRole') {\n            app = <AppViews.SelectRole {...{ parent }} />\n        } else { // 'RunRole'\n            app = role;\n        }\n        return <AppViews.Wrapper {...{ app }}  />;\n    }\n}\n\nclass IBO extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { mode: 'Deploy' };\n\n\n    }\n    async deploy() { // from mode: Deploy\n        const ctc = this.props.acc.deploy(backend);\n        this.setState({ mode: 'RunBackend', ctc });\n        const ctcInfoStr = JSON.stringify(await ctc.getInfo(), null, 2);\n        this.setState({ ctcInfoStr, ctc });\n\n    }\n\n\n\n    async sentCADs() {\n        this.setState({ mode: 'WaitingForProduct' });\n    }\n\n    async shippedProduct() {\n        this.setState({ mode: 'WaitingForCertified' });\n    }\n    async shippedProductFinal() {\n        this.setState({ mode: 'Finished' });\n    }\n\n\n    enterInfo(info) { this.setState({ mode: 'EnterRequest', info }); } // from mode: EnterInfo\n    enterRequest(requestStandard) { this.setState({ mode: 'RunBackend', requestStandard }); } // from mode: EnterRequest\n    async runBackend() { // from mode: RunBackend\n        const { ctc } = this.state;\n        this.setState({ mode: 'BackendRunning' });\n        //  const request = reach.parseCurrency(requestStandard);¢£\n\n        const interact = {\n            want: (request) => this.setState({ mode: 'DisplayInfo', requestStandard: reach.formatCurrency(request, 4) }),\n            got: (info) => this.setState({ info }),\n            request: reach.parseCurrency(5), //how much does IBO want from the customer\n            showTerms: async (term) => {\n\n                return await new Promise(resolveShowTerms => {\n                    this.setState({ mode: 'ShowTerms', term, resolveShowTerms });\n                });\n            },\n            sentCADtoSupplier: async (cad) => {\n                console.log(`CAD file ${cad} sent to Supplier`)\n                return await new Promise(resolveSendCADFile => {\n                    this.setState({ mode: 'SendCADToSupplier', cad, resolveSendCADFile });\n                });\n            },\n            ackProductReceived: async (term, from) => {\n                console.log(`IBO received product from ${from}!`)\n                const terms = term.length > 0 ? term.replace(/\\0/g, '') : \"\"\n                return await new Promise(resolveAckProductReceived => {\n                    this.setState({ mode: 'AckProductReceived', resolveAckProductReceived, terms, from });\n                });\n\n            },\n            shippedProduct: async (to, purpose) => {\n                console.log(`Shipped product to ${to} for the purpose of ${purpose}!`)\n\n                if (to.substring(0, 3) === \"Cer\") {\n                    return await new Promise(resolveShippedToCerts => {\n                        this.setState({ mode: 'ShippedToCert', resolveShippedToCerts, purpose });\n                    });\n                } else {\n                    return await new Promise(resolveShippedToCustomer => {\n                        this.setState({ mode: 'ShippedToCustomer', resolveShippedToCustomer, purpose });\n                    });\n                }\n            }\n        };\n        await backend.IBO(ctc, interact);\n        //this.setState({ mode: 'BackendRan' });\n    }\n\n    async acknowledgedProduct() {\n        this.setState({ mode: 'ShipProduct' });\n    }\n\n\n\n\n    render() {\n        let ibo = null;\n        const parent = this;\n        const { mode, ctcInfoStr, requestStandard,\n            info, resolveShowTerms, resolveSendCADFile,\n            resolveShippedToCerts, resolveAckProductReceived, purpose, resolveShippedToCustomer, terms, from } = this.state;\n        if (mode === 'Deploy') {\n            ibo = <IBOViews.Deploy {...{ parent }} />;\n        } else if (mode === 'RunBackend') {\n            ibo = <IBOViews.RunBackend {...{ parent, info, requestStandard, standardUnit }} />;\n        } else if (mode === 'BackendRunning') {\n            ibo = <IBOViews.BackendRunning {...{ ctcInfoStr }} />;\n        } else if (mode === 'ShowTerms') {\n            ibo = <IBOViews.ShowTerms {...{ ctcInfoStr, resolveShowTerms }} />;\n        } else if (mode === 'SendCADToSupplier') {\n            ibo = <IBOViews.SendCADToSupplier {...{ ctcInfoStr, resolveSendCADFile, parent }} />;\n        } else if (mode === 'WaitingForProduct') {\n            ibo = <IBOViews.WaitingForProduct {...{ ctcInfoStr, parent }} />;\n        } else if (mode === 'AckProductReceived') {\n            ibo = <IBOViews.AckProductReceived {...{ ctcInfoStr, resolveAckProductReceived, parent, terms, from }} />;\n        } else if (mode === 'ShippedToCert') {\n            ibo = <IBOViews.ShippedToCert {...{ ctcInfoStr, parent, resolveShippedToCerts, purpose }} />;\n        } else if (mode === 'WaitingForCertified') {\n            ibo = <IBOViews.WaitingForCertified {...{ ctcInfoStr, parent }} />;\n        } else if (mode === 'ShippedToCustomer') {\n            ibo = <IBOViews.ShippedToCustomer {...{ ctcInfoStr, parent, resolveShippedToCustomer, purpose }} />;\n        } else if (mode === 'Finished') {\n            ibo = <IBOViews.Finished {...{ ctcInfoStr }} />;\n        }\n\n        else { // 'BackendRan'\n            ibo = <IBOViews.BackendRan />;\n        }\n        return <IBOViews.IBOWrapper {...{ ibo }} />\n    }\n}\n\nclass Supplier extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { mode: 'RunBackend' };\n    }\n    async runBackend(ctcInfoStr) { // from mode: RunBackend\n        const ctcInfo = JSON.parse(ctcInfoStr);\n        const ctc = this.props.acc.attach(backend, ctcInfo);\n        this.setState({ mode: 'ApproveRequest' });\n        const interact = {\n            ackCADreceived: async (terms) => {\n                console.log(`Supplier received CAD file ${terms}!`)\n                return await new Promise(resolveAckProductReceived => {\n                    this.setState({ mode: 'AckProductReceived', terms, resolveAckProductReceived });\n                });\n            },\n            shippedProduct: async (to, purpose) => {\n                console.log(`Shipped product to ${to} for the purpose of ${purpose}!`)\n                return await new Promise(resolveShipProduct => {\n                    this.setState({ mode: 'ShipProduct', resolveShipProduct });\n                });\n            }\n        };\n        await backend.Supplier(ctc, interact);\n    }\n    async acknowledgedProduct() {\n        // this.setState({ mode: 'ShipProduct' });\n        console.log(\"lol\")\n    }\n\n    async shippedProduct() {\n        this.setState({ mode: 'Finished' });\n    }\n\n    render() {\n        let supplier = null;\n        const parent = this;\n        const { mode, requestStandard, resolveAckProductReceived, resolveShipProduct } = this.state;\n        if (mode === 'RunBackend') {\n            supplier = <SupplierViews.RunBackend {...{ parent }} />\n        } else if (mode === 'ApproveRequest') {\n            supplier = <SupplierViews.ApproveRequest {...{ requestStandard }} />;\n        } else if (mode === 'AckProductReceived') {\n            supplier = <SupplierViews.AckProductReceived {...{ requestStandard, resolveAckProductReceived, parent }} />;\n        } else if (mode === 'ShipProduct') {\n            supplier = <SupplierViews.ShipProduct {...{ requestStandard, resolveShipProduct, parent }} />;\n        }\n        else { // 'DisplayInfo'\n            supplier = <SupplierViews.DisplayInfo  />\n        }\n        return <SupplierViews.SupplierWrapper {...{ supplier }} />;\n    }\n}\n\n\nclass Cert extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { mode: 'RunBackend' };\n    }\n\n\n\n    async runBackend(ctcInfoStr) { // from mode: RunBackend\n        // const { ctc, requestStandard, info } = this.state;\n        const ctcInfo = JSON.parse(ctcInfoStr);\n        const ctc = this.props.acc.attach(backend, ctcInfo);\n        this.setState({ mode: 'ApproveRequest' });\n        const interact = {\n            ackProductReceived: async (from) => {\n                console.log(`Cert Authority received product from ${from}!`)\n                return await new Promise(resolveAckProductReceived => {\n                    this.setState({ mode: 'AckProductReceived', resolveAckProductReceived });\n                });\n            },\n            certified: async () => {\n                console.log(`Cert Authority certified the product!`)\n                return await new Promise(resolveCertifyProduct => {\n                    this.setState({ mode: 'CertifyProduct', resolveCertifyProduct });\n                });\n            },\n            notCertified: () => {\n                console.log(`Cert Authority DID NOT certify the product!`)\n                return true\n            },\n            shippedProduct: async (to, purpose) => {\n                console.log(`Shipped product to ${to} for the purpose of ${purpose}!`)\n                return await new Promise(resolveShipToIBO => {\n                    this.setState({ mode: 'ShipProductToIBO', resolveShipToIBO, to, purpose });\n                });\n            }\n        }\n        await backend.Cert(ctc, interact);\n        this.setState({ mode: 'BackendRan' });\n    }\n\n    async acknowledgedProduct() {\n        // this.setState({ mode: 'ShipProduct' });\n        this.setState({ mode: 'BackendRan' });\n        console.log(\"lol\")\n    }\n\n    async finished() {\n        this.setState({ mode: 'DisplayInfo' });\n        console.log(\"Cert Authority is finished\")\n    }\n\n    async waiting() {\n      \n        console.log(\"Cert Authority is waiting\")\n    }\n\n\n    render() {\n        let cert = null;\n        const parent = this;\n        const { mode, requestStandard, info, resolveAckProductReceived, resolveCertifyProduct, resolveShipToIBO, to, purpose } = this.state;\n        if (mode === 'RunBackend') {\n            cert = <CertViews.RunBackend {...{ parent }} />\n        } else if (mode === 'ApproveRequest') {\n            cert = <CertViews.ApproveRequest {...{ requestStandard }} />;\n        } else if (mode === 'AckProductReceived') {\n            cert = <CertViews.AckProductReceived {...{ requestStandard, resolveAckProductReceived, parent }} />;\n        } else if (mode === 'CertifyProduct') {\n            cert = <CertViews.CertifyProduct {...{ requestStandard, resolveCertifyProduct, parent }} />;\n        } else if (mode === 'ShipProductToIBO') {\n            cert = <CertViews.ShipProductToIBO {...{ requestStandard, resolveShipToIBO, to, purpose, parent }} />;\n        } else if (mode === 'BackendRan') {\n            cert = <CertViews.BackendRan {...{ requestStandard, resolveShipToIBO, to, purpose, parent }} />;\n        }\n\n        else { // 'DisplayInfo'\n            cert = <CertViews.DisplayInfo {...{ info }} />\n        }\n        return <CertViews.CertWrapper {...{ cert }} />;\n    }\n}\n\n\n\nclass Customer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { mode: 'RunBackend', terms: \"\" };\n    }\n\n    // from mode: EnterInfo\n\n    async runBackend(ctcInfoStr) { // from mode: RunBackend\n        // const { ctc, requestStandard, info } = this.state;\n        const ctcInfo = JSON.parse(ctcInfoStr);\n        const ctc = this.props.acc.attach(backend, ctcInfo);\n        this.setState({ mode: 'ApproveRequest' });\n        const interact = {\n            acceptTerms: async (terms) => {\n                console.log(`Customer accepts the terms ${terms}!`)\n                return await new Promise(resolveAcceptTerms => {\n                    this.setState({ mode: 'AcceptTerms', terms, resolveAcceptTerms, ctc });\n                });\n            },\n            ackProductReceived: async (from) => {\n                console.log(`Customer received product from ${from}!`)\n                return await new Promise(resolveProductReceived => {\n                    this.setState({ mode: 'ReceivedProduct', from, resolveProductReceived });\n                });\n\n            }\n        }\n        await backend.Customer(ctc, interact);\n\n    }\n    async acceptedTerms() {\n        this.setState({ mode: 'WaitingForProduct' });\n    }\n\n    async finished() {\n        this.setState({ mode: 'Finished' });\n    }\n\n    render() {\n        let customer = null;\n        const parent = this;\n        const { mode, requestStandard, info, resolveAcceptTerms, resolveProductReceived, from, ctc } = this.state;\n        const terms = this.state.terms.replace(/\\0/g, '')\n        if (mode === 'RunBackend') {\n            customer = <CustomerViews.RunBackend {...{ parent }} />\n        } else if (mode === 'ApproveRequest') {\n            customer = <CustomerViews.ApproveRequest {...{ requestStandard }} />;\n        } else if (mode === 'AcceptTerms') {\n            customer = <CustomerViews.AcceptTerms {...{ requestStandard, terms, resolveAcceptTerms, parent, ctc }} />;\n        } else if (mode === 'ReceivedProduct') {\n            customer = <CustomerViews.ReceivedProduct {...{ requestStandard, from, resolveProductReceived, parent }} />;\n        } else if (mode === 'WaitingForProduct') {\n            customer = <CustomerViews.WaitingForProduct {...{ requestStandard, from, resolveProductReceived, parent, ctc }} />;\n        } else if (mode === 'Finished') {\n            customer = <CustomerViews.Finished {...{ parent }} />;\n        } else { // 'DisplayInfo'\n            customer = <CustomerViews.ApproveRequest {...{ info }} />\n        }\n        return <CustomerViews.CustomerWrapper {...{ customer }} />;\n    }\n}\n\n\n\n\nrenderDOM();"],"sourceRoot":""}